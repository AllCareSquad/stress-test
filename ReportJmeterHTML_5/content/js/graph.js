/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "maxY": 229196.0, "series": [{"data": [[0.0, 11.0], [0.1, 14.0], [0.2, 14.0], [0.3, 15.0], [0.4, 15.0], [0.5, 15.0], [0.6, 15.0], [0.7, 15.0], [0.8, 16.0], [0.9, 16.0], [1.0, 16.0], [1.1, 16.0], [1.2, 16.0], [1.3, 16.0], [1.4, 16.0], [1.5, 17.0], [1.6, 17.0], [1.7, 17.0], [1.8, 17.0], [1.9, 17.0], [2.0, 17.0], [2.1, 17.0], [2.2, 17.0], [2.3, 17.0], [2.4, 18.0], [2.5, 18.0], [2.6, 18.0], [2.7, 18.0], [2.8, 18.0], [2.9, 18.0], [3.0, 18.0], [3.1, 18.0], [3.2, 18.0], [3.3, 18.0], [3.4, 18.0], [3.5, 18.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 19.0], [4.0, 19.0], [4.1, 19.0], [4.2, 19.0], [4.3, 19.0], [4.4, 19.0], [4.5, 19.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 19.0], [5.0, 19.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 21.0], [6.9, 21.0], [7.0, 21.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 21.0], [7.5, 21.0], [7.6, 21.0], [7.7, 21.0], [7.8, 21.0], [7.9, 21.0], [8.0, 21.0], [8.1, 21.0], [8.2, 21.0], [8.3, 21.0], [8.4, 21.0], [8.5, 22.0], [8.6, 22.0], [8.7, 22.0], [8.8, 22.0], [8.9, 22.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 22.0], [9.4, 22.0], [9.5, 22.0], [9.6, 22.0], [9.7, 22.0], [9.8, 22.0], [9.9, 22.0], [10.0, 22.0], [10.1, 23.0], [10.2, 23.0], [10.3, 23.0], [10.4, 23.0], [10.5, 23.0], [10.6, 23.0], [10.7, 23.0], [10.8, 23.0], [10.9, 23.0], [11.0, 23.0], [11.1, 23.0], [11.2, 23.0], [11.3, 23.0], [11.4, 24.0], [11.5, 24.0], [11.6, 24.0], [11.7, 24.0], [11.8, 24.0], [11.9, 24.0], [12.0, 24.0], [12.1, 24.0], [12.2, 24.0], [12.3, 25.0], [12.4, 25.0], [12.5, 25.0], [12.6, 25.0], [12.7, 25.0], [12.8, 25.0], [12.9, 26.0], [13.0, 26.0], [13.1, 26.0], [13.2, 27.0], [13.3, 27.0], [13.4, 27.0], [13.5, 28.0], [13.6, 28.0], [13.7, 29.0], [13.8, 29.0], [13.9, 30.0], [14.0, 30.0], [14.1, 31.0], [14.2, 31.0], [14.3, 31.0], [14.4, 31.0], [14.5, 31.0], [14.6, 31.0], [14.7, 31.0], [14.8, 31.0], [14.9, 32.0], [15.0, 32.0], [15.1, 32.0], [15.2, 32.0], [15.3, 32.0], [15.4, 32.0], [15.5, 32.0], [15.6, 32.0], [15.7, 32.0], [15.8, 32.0], [15.9, 32.0], [16.0, 32.0], [16.1, 32.0], [16.2, 32.0], [16.3, 33.0], [16.4, 33.0], [16.5, 33.0], [16.6, 33.0], [16.7, 33.0], [16.8, 33.0], [16.9, 33.0], [17.0, 33.0], [17.1, 33.0], [17.2, 33.0], [17.3, 33.0], [17.4, 33.0], [17.5, 33.0], [17.6, 33.0], [17.7, 33.0], [17.8, 33.0], [17.9, 33.0], [18.0, 33.0], [18.1, 33.0], [18.2, 34.0], [18.3, 34.0], [18.4, 34.0], [18.5, 34.0], [18.6, 34.0], [18.7, 34.0], [18.8, 34.0], [18.9, 34.0], [19.0, 34.0], [19.1, 34.0], [19.2, 34.0], [19.3, 34.0], [19.4, 34.0], [19.5, 34.0], [19.6, 34.0], [19.7, 34.0], [19.8, 34.0], [19.9, 34.0], [20.0, 34.0], [20.1, 34.0], [20.2, 34.0], [20.3, 34.0], [20.4, 34.0], [20.5, 34.0], [20.6, 34.0], [20.7, 34.0], [20.8, 35.0], [20.9, 35.0], [21.0, 35.0], [21.1, 35.0], [21.2, 35.0], [21.3, 35.0], [21.4, 35.0], [21.5, 35.0], [21.6, 35.0], [21.7, 35.0], [21.8, 35.0], [21.9, 35.0], [22.0, 35.0], [22.1, 35.0], [22.2, 35.0], [22.3, 35.0], [22.4, 35.0], [22.5, 35.0], [22.6, 35.0], [22.7, 35.0], [22.8, 35.0], [22.9, 35.0], [23.0, 35.0], [23.1, 35.0], [23.2, 35.0], [23.3, 35.0], [23.4, 35.0], [23.5, 35.0], [23.6, 35.0], [23.7, 35.0], [23.8, 35.0], [23.9, 35.0], [24.0, 35.0], [24.1, 36.0], [24.2, 36.0], [24.3, 36.0], [24.4, 36.0], [24.5, 36.0], [24.6, 36.0], [24.7, 36.0], [24.8, 36.0], [24.9, 36.0], [25.0, 36.0], [25.1, 36.0], [25.2, 36.0], [25.3, 36.0], [25.4, 36.0], [25.5, 36.0], [25.6, 36.0], [25.7, 36.0], [25.8, 36.0], [25.9, 36.0], [26.0, 36.0], [26.1, 36.0], [26.2, 36.0], [26.3, 36.0], [26.4, 36.0], [26.5, 36.0], [26.6, 36.0], [26.7, 36.0], [26.8, 36.0], [26.9, 36.0], [27.0, 36.0], [27.1, 36.0], [27.2, 36.0], [27.3, 36.0], [27.4, 36.0], [27.5, 37.0], [27.6, 37.0], [27.7, 37.0], [27.8, 37.0], [27.9, 37.0], [28.0, 37.0], [28.1, 37.0], [28.2, 37.0], [28.3, 37.0], [28.4, 37.0], [28.5, 37.0], [28.6, 37.0], [28.7, 37.0], [28.8, 37.0], [28.9, 37.0], [29.0, 37.0], [29.1, 37.0], [29.2, 37.0], [29.3, 37.0], [29.4, 37.0], [29.5, 37.0], [29.6, 37.0], [29.7, 37.0], [29.8, 37.0], [29.9, 37.0], [30.0, 37.0], [30.1, 37.0], [30.2, 37.0], [30.3, 37.0], [30.4, 37.0], [30.5, 37.0], [30.6, 37.0], [30.7, 37.0], [30.8, 37.0], [30.9, 38.0], [31.0, 38.0], [31.1, 38.0], [31.2, 38.0], [31.3, 38.0], [31.4, 38.0], [31.5, 38.0], [31.6, 38.0], [31.7, 38.0], [31.8, 38.0], [31.9, 38.0], [32.0, 38.0], [32.1, 38.0], [32.2, 38.0], [32.3, 38.0], [32.4, 38.0], [32.5, 38.0], [32.6, 38.0], [32.7, 38.0], [32.8, 38.0], [32.9, 38.0], [33.0, 38.0], [33.1, 38.0], [33.2, 38.0], [33.3, 38.0], [33.4, 38.0], [33.5, 38.0], [33.6, 38.0], [33.7, 38.0], [33.8, 38.0], [33.9, 38.0], [34.0, 38.0], [34.1, 38.0], [34.2, 38.0], [34.3, 39.0], [34.4, 39.0], [34.5, 39.0], [34.6, 39.0], [34.7, 39.0], [34.8, 39.0], [34.9, 39.0], [35.0, 39.0], [35.1, 39.0], [35.2, 39.0], [35.3, 39.0], [35.4, 39.0], [35.5, 39.0], [35.6, 39.0], [35.7, 39.0], [35.8, 39.0], [35.9, 39.0], [36.0, 39.0], [36.1, 39.0], [36.2, 39.0], [36.3, 39.0], [36.4, 39.0], [36.5, 39.0], [36.6, 39.0], [36.7, 39.0], [36.8, 39.0], [36.9, 39.0], [37.0, 39.0], [37.1, 39.0], [37.2, 39.0], [37.3, 39.0], [37.4, 39.0], [37.5, 40.0], [37.6, 40.0], [37.7, 40.0], [37.8, 40.0], [37.9, 40.0], [38.0, 40.0], [38.1, 40.0], [38.2, 40.0], [38.3, 40.0], [38.4, 40.0], [38.5, 40.0], [38.6, 40.0], [38.7, 40.0], [38.8, 40.0], [38.9, 40.0], [39.0, 40.0], [39.1, 40.0], [39.2, 40.0], [39.3, 40.0], [39.4, 40.0], [39.5, 40.0], [39.6, 40.0], [39.7, 40.0], [39.8, 40.0], [39.9, 40.0], [40.0, 40.0], [40.1, 40.0], [40.2, 40.0], [40.3, 40.0], [40.4, 41.0], [40.5, 41.0], [40.6, 41.0], [40.7, 41.0], [40.8, 41.0], [40.9, 41.0], [41.0, 41.0], [41.1, 41.0], [41.2, 41.0], [41.3, 41.0], [41.4, 41.0], [41.5, 41.0], [41.6, 41.0], [41.7, 41.0], [41.8, 41.0], [41.9, 41.0], [42.0, 41.0], [42.1, 41.0], [42.2, 41.0], [42.3, 41.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 41.0], [42.8, 41.0], [42.9, 41.0], [43.0, 42.0], [43.1, 42.0], [43.2, 42.0], [43.3, 42.0], [43.4, 42.0], [43.5, 42.0], [43.6, 42.0], [43.7, 42.0], [43.8, 42.0], [43.9, 42.0], [44.0, 42.0], [44.1, 42.0], [44.2, 42.0], [44.3, 42.0], [44.4, 42.0], [44.5, 42.0], [44.6, 42.0], [44.7, 42.0], [44.8, 42.0], [44.9, 42.0], [45.0, 42.0], [45.1, 42.0], [45.2, 42.0], [45.3, 42.0], [45.4, 42.0], [45.5, 42.0], [45.6, 43.0], [45.7, 43.0], [45.8, 43.0], [45.9, 43.0], [46.0, 43.0], [46.1, 43.0], [46.2, 43.0], [46.3, 43.0], [46.4, 43.0], [46.5, 43.0], [46.6, 43.0], [46.7, 43.0], [46.8, 43.0], [46.9, 43.0], [47.0, 43.0], [47.1, 43.0], [47.2, 43.0], [47.3, 43.0], [47.4, 43.0], [47.5, 43.0], [47.6, 43.0], [47.7, 43.0], [47.8, 43.0], [47.9, 43.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 44.0], [48.4, 44.0], [48.5, 44.0], [48.6, 44.0], [48.7, 44.0], [48.8, 44.0], [48.9, 44.0], [49.0, 44.0], [49.1, 44.0], [49.2, 44.0], [49.3, 44.0], [49.4, 44.0], [49.5, 44.0], [49.6, 44.0], [49.7, 44.0], [49.8, 44.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 44.0], [50.4, 44.0], [50.5, 44.0], [50.6, 44.0], [50.7, 44.0], [50.8, 45.0], [50.9, 45.0], [51.0, 45.0], [51.1, 45.0], [51.2, 45.0], [51.3, 45.0], [51.4, 45.0], [51.5, 45.0], [51.6, 45.0], [51.7, 45.0], [51.8, 45.0], [51.9, 45.0], [52.0, 45.0], [52.1, 45.0], [52.2, 45.0], [52.3, 45.0], [52.4, 45.0], [52.5, 45.0], [52.6, 45.0], [52.7, 45.0], [52.8, 45.0], [52.9, 45.0], [53.0, 45.0], [53.1, 45.0], [53.2, 45.0], [53.3, 46.0], [53.4, 46.0], [53.5, 46.0], [53.6, 46.0], [53.7, 46.0], [53.8, 46.0], [53.9, 46.0], [54.0, 46.0], [54.1, 46.0], [54.2, 46.0], [54.3, 46.0], [54.4, 46.0], [54.5, 46.0], [54.6, 46.0], [54.7, 46.0], [54.8, 46.0], [54.9, 46.0], [55.0, 46.0], [55.1, 46.0], [55.2, 46.0], [55.3, 46.0], [55.4, 46.0], [55.5, 46.0], [55.6, 46.0], [55.7, 46.0], [55.8, 47.0], [55.9, 47.0], [56.0, 47.0], [56.1, 47.0], [56.2, 47.0], [56.3, 47.0], [56.4, 47.0], [56.5, 47.0], [56.6, 47.0], [56.7, 47.0], [56.8, 47.0], [56.9, 47.0], [57.0, 47.0], [57.1, 47.0], [57.2, 47.0], [57.3, 47.0], [57.4, 47.0], [57.5, 47.0], [57.6, 47.0], [57.7, 47.0], [57.8, 47.0], [57.9, 47.0], [58.0, 47.0], [58.1, 48.0], [58.2, 48.0], [58.3, 48.0], [58.4, 48.0], [58.5, 48.0], [58.6, 48.0], [58.7, 48.0], [58.8, 48.0], [58.9, 48.0], [59.0, 48.0], [59.1, 48.0], [59.2, 48.0], [59.3, 48.0], [59.4, 48.0], [59.5, 48.0], [59.6, 48.0], [59.7, 48.0], [59.8, 48.0], [59.9, 48.0], [60.0, 48.0], [60.1, 48.0], [60.2, 48.0], [60.3, 48.0], [60.4, 48.0], [60.5, 49.0], [60.6, 49.0], [60.7, 49.0], [60.8, 49.0], [60.9, 49.0], [61.0, 49.0], [61.1, 49.0], [61.2, 49.0], [61.3, 49.0], [61.4, 49.0], [61.5, 49.0], [61.6, 49.0], [61.7, 49.0], [61.8, 49.0], [61.9, 49.0], [62.0, 49.0], [62.1, 49.0], [62.2, 49.0], [62.3, 49.0], [62.4, 49.0], [62.5, 49.0], [62.6, 50.0], [62.7, 50.0], [62.8, 50.0], [62.9, 50.0], [63.0, 50.0], [63.1, 50.0], [63.2, 50.0], [63.3, 50.0], [63.4, 50.0], [63.5, 50.0], [63.6, 50.0], [63.7, 50.0], [63.8, 50.0], [63.9, 50.0], [64.0, 50.0], [64.1, 50.0], [64.2, 50.0], [64.3, 50.0], [64.4, 50.0], [64.5, 51.0], [64.6, 51.0], [64.7, 51.0], [64.8, 51.0], [64.9, 51.0], [65.0, 51.0], [65.1, 51.0], [65.2, 51.0], [65.3, 51.0], [65.4, 51.0], [65.5, 51.0], [65.6, 51.0], [65.7, 51.0], [65.8, 51.0], [65.9, 51.0], [66.0, 51.0], [66.1, 51.0], [66.2, 51.0], [66.3, 51.0], [66.4, 52.0], [66.5, 52.0], [66.6, 52.0], [66.7, 52.0], [66.8, 52.0], [66.9, 52.0], [67.0, 52.0], [67.1, 52.0], [67.2, 52.0], [67.3, 52.0], [67.4, 52.0], [67.5, 52.0], [67.6, 52.0], [67.7, 52.0], [67.8, 52.0], [67.9, 52.0], [68.0, 53.0], [68.1, 53.0], [68.2, 53.0], [68.3, 53.0], [68.4, 53.0], [68.5, 53.0], [68.6, 53.0], [68.7, 53.0], [68.8, 53.0], [68.9, 53.0], [69.0, 53.0], [69.1, 53.0], [69.2, 53.0], [69.3, 53.0], [69.4, 54.0], [69.5, 54.0], [69.6, 54.0], [69.7, 54.0], [69.8, 54.0], [69.9, 54.0], [70.0, 54.0], [70.1, 54.0], [70.2, 54.0], [70.3, 54.0], [70.4, 54.0], [70.5, 55.0], [70.6, 55.0], [70.7, 55.0], [70.8, 55.0], [70.9, 55.0], [71.0, 55.0], [71.1, 55.0], [71.2, 55.0], [71.3, 55.0], [71.4, 55.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 57.0], [72.4, 57.0], [72.5, 57.0], [72.6, 57.0], [72.7, 57.0], [72.8, 57.0], [72.9, 57.0], [73.0, 58.0], [73.1, 58.0], [73.2, 58.0], [73.3, 58.0], [73.4, 58.0], [73.5, 58.0], [73.6, 59.0], [73.7, 59.0], [73.8, 59.0], [73.9, 59.0], [74.0, 59.0], [74.1, 60.0], [74.2, 60.0], [74.3, 60.0], [74.4, 60.0], [74.5, 61.0], [74.6, 61.0], [74.7, 61.0], [74.8, 62.0], [74.9, 62.0], [75.0, 62.0], [75.1, 63.0], [75.2, 63.0], [75.3, 63.0], [75.4, 64.0], [75.5, 64.0], [75.6, 65.0], [75.7, 65.0], [75.8, 66.0], [75.9, 66.0], [76.0, 67.0], [76.1, 68.0], [76.2, 68.0], [76.3, 69.0], [76.4, 69.0], [76.5, 70.0], [76.6, 71.0], [76.7, 72.0], [76.8, 73.0], [76.9, 74.0], [77.0, 75.0], [77.1, 76.0], [77.2, 77.0], [77.3, 78.0], [77.4, 79.0], [77.5, 80.0], [77.6, 81.0], [77.7, 83.0], [77.8, 84.0], [77.9, 85.0], [78.0, 87.0], [78.1, 89.0], [78.2, 91.0], [78.3, 93.0], [78.4, 95.0], [78.5, 98.0], [78.6, 100.0], [78.7, 103.0], [78.8, 108.0], [78.9, 114.0], [79.0, 131.0], [79.1, 153.0], [79.2, 170.0], [79.3, 177.0], [79.4, 178.0], [79.5, 178.0], [79.6, 179.0], [79.7, 179.0], [79.8, 180.0], [79.9, 180.0], [80.0, 181.0], [80.1, 181.0], [80.2, 182.0], [80.3, 182.0], [80.4, 183.0], [80.5, 183.0], [80.6, 184.0], [80.7, 185.0], [80.8, 185.0], [80.9, 186.0], [81.0, 187.0], [81.1, 187.0], [81.2, 188.0], [81.3, 188.0], [81.4, 189.0], [81.5, 189.0], [81.6, 190.0], [81.7, 190.0], [81.8, 191.0], [81.9, 192.0], [82.0, 192.0], [82.1, 193.0], [82.2, 193.0], [82.3, 194.0], [82.4, 194.0], [82.5, 195.0], [82.6, 196.0], [82.7, 197.0], [82.8, 198.0], [82.9, 198.0], [83.0, 199.0], [83.1, 201.0], [83.2, 202.0], [83.3, 203.0], [83.4, 205.0], [83.5, 207.0], [83.6, 211.0], [83.7, 221.0], [83.8, 264.0], [83.9, 712.0], [84.0, 781.0], [84.1, 1406.0], [84.2, 98909.0], [84.3, 101824.0], [84.4, 104246.0], [84.5, 107003.0], [84.6, 109875.0], [84.7, 111943.0], [84.8, 114003.0], [84.9, 116133.0], [85.0, 118236.0], [85.1, 119942.0], [85.2, 121692.0], [85.3, 123329.0], [85.4, 125341.0], [85.5, 126850.0], [85.6, 129831.0], [85.7, 131256.0], [85.8, 133056.0], [85.9, 134564.0], [86.0, 136325.0], [86.1, 137629.0], [86.2, 138962.0], [86.3, 140264.0], [86.4, 140895.0], [86.5, 142106.0], [86.6, 142778.0], [86.7, 143988.0], [86.8, 144607.0], [86.9, 145204.0], [87.0, 145807.0], [87.1, 146450.0], [87.2, 147648.0], [87.3, 148243.0], [87.4, 148799.0], [87.5, 149397.0], [87.6, 149998.0], [87.7, 150581.0], [87.8, 151184.0], [87.9, 151773.0], [88.0, 151991.0], [88.1, 152591.0], [88.2, 153008.0], [88.3, 153566.0], [88.4, 154104.0], [88.5, 154535.0], [88.6, 155300.0], [88.7, 155875.0], [88.8, 156121.0], [88.9, 156814.0], [89.0, 157389.0], [89.1, 157593.0], [89.2, 158123.0], [89.3, 158598.0], [89.4, 159273.0], [89.5, 159823.0], [89.6, 160045.0], [89.7, 160897.0], [89.8, 160952.0], [89.9, 161678.0], [90.0, 161972.0], [90.1, 162304.0], [90.2, 162826.0], [90.3, 163178.0], [90.4, 163611.0], [90.5, 164094.0], [90.6, 164263.0], [90.7, 164700.0], [90.8, 164919.0], [90.9, 165278.0], [91.0, 166084.0], [91.1, 166937.0], [91.2, 167736.0], [91.3, 168398.0], [91.4, 169209.0], [91.5, 170081.0], [91.6, 170982.0], [91.7, 171809.0], [91.8, 172669.0], [91.9, 173156.0], [92.0, 173804.0], [92.1, 174457.0], [92.2, 175163.0], [92.3, 176364.0], [92.4, 177370.0], [92.5, 178531.0], [92.6, 178751.0], [92.7, 179740.0], [92.8, 180112.0], [92.9, 180848.0], [93.0, 181677.0], [93.1, 182365.0], [93.2, 183139.0], [93.3, 183765.0], [93.4, 184445.0], [93.5, 185435.0], [93.6, 186051.0], [93.7, 186450.0], [93.8, 187115.0], [93.9, 187677.0], [94.0, 188063.0], [94.1, 188623.0], [94.2, 189234.0], [94.3, 190272.0], [94.4, 191062.0], [94.5, 191682.0], [94.6, 192226.0], [94.7, 193009.0], [94.8, 193570.0], [94.9, 194115.0], [95.0, 194601.0], [95.1, 195232.0], [95.2, 195744.0], [95.3, 196078.0], [95.4, 196631.0], [95.5, 197321.0], [95.6, 197905.0], [95.7, 198454.0], [95.8, 199070.0], [95.9, 199522.0], [96.0, 200214.0], [96.1, 201051.0], [96.2, 201803.0], [96.3, 202361.0], [96.4, 202924.0], [96.5, 203592.0], [96.6, 204098.0], [96.7, 204621.0], [96.8, 205187.0], [96.9, 205728.0], [97.0, 206021.0], [97.1, 206510.0], [97.2, 206911.0], [97.3, 207425.0], [97.4, 207838.0], [97.5, 208041.0], [97.6, 208548.0], [97.7, 208847.0], [97.8, 209152.0], [97.9, 209458.0], [98.0, 209796.0], [98.1, 210265.0], [98.2, 210625.0], [98.3, 211246.0], [98.4, 212378.0], [98.5, 213197.0], [98.6, 215321.0], [98.7, 215793.0], [98.8, 216327.0], [98.9, 216762.0], [99.0, 217470.0], [99.1, 217898.0], [99.2, 220346.0], [99.3, 220586.0], [99.4, 220737.0], [99.5, 220991.0], [99.6, 221462.0], [99.7, 221496.0], [99.8, 221558.0], [99.9, 221725.0], [100.0, 229196.0]], "isOverall": false, "label": "getProfile", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 78570.0, "series": [{"data": [[0.0, 78570.0], [135200.0, 5.0], [154400.0, 7.0], [160800.0, 21.0], [167200.0, 18.0], [180000.0, 24.0], [173600.0, 9.0], [186400.0, 36.0], [192800.0, 17.0], [199200.0, 22.0], [212000.0, 10.0], [205600.0, 15.0], [132900.0, 1.0], [158500.0, 3.0], [171300.0, 8.0], [164900.0, 48.0], [177700.0, 8.0], [184100.0, 5.0], [190500.0, 3.0], [203300.0, 4.0], [196900.0, 8.0], [209700.0, 36.0], [216100.0, 11.0], [222500.0, 1.0], [98700.0, 2.0], [117900.0, 7.0], [114700.0, 18.0], [121100.0, 2.0], [130700.0, 1.0], [127500.0, 20.0], [137000.0, 5.0], [143400.0, 16.0], [149800.0, 3.0], [162600.0, 7.0], [156200.0, 15.0], [169000.0, 25.0], [175400.0, 8.0], [188200.0, 12.0], [181800.0, 18.0], [194600.0, 31.0], [201000.0, 17.0], [207400.0, 64.0], [213800.0, 8.0], [220200.0, 15.0], [100.0, 4423.0], [141100.0, 1.0], [153900.0, 25.0], [147500.0, 6.0], [160300.0, 22.0], [166700.0, 3.0], [179500.0, 4.0], [173100.0, 28.0], [185900.0, 10.0], [192300.0, 5.0], [198700.0, 10.0], [200.0, 831.0], [211500.0, 7.0], [205100.0, 39.0], [217900.0, 4.0], [58500.0, 1.0], [69000.0, 1.0], [300.0, 14.0], [400.0, 10.0], [104200.0, 13.0], [113800.0, 2.0], [117000.0, 1.0], [126600.0, 12.0], [500.0, 1.0], [129800.0, 6.0], [138800.0, 2.0], [132400.0, 7.0], [145200.0, 75.0], [600.0, 16.0], [158000.0, 9.0], [170800.0, 10.0], [164400.0, 28.0], [700.0, 131.0], [177200.0, 3.0], [183600.0, 13.0], [196400.0, 33.0], [190000.0, 2.0], [202800.0, 8.0], [800.0, 14.0], [209200.0, 40.0], [215600.0, 22.0], [222000.0, 11.0], [900.0, 1.0], [1000.0, 9.0], [1100.0, 2.0], [1200.0, 9.0], [1300.0, 57.0], [1400.0, 19.0], [1500.0, 6.0], [1600.0, 3.0], [2000.0, 19.0], [136500.0, 5.0], [2200.0, 1.0], [142900.0, 17.0], [2400.0, 8.0], [149300.0, 27.0], [162100.0, 20.0], [155700.0, 2.0], [168500.0, 3.0], [2700.0, 8.0], [174900.0, 22.0], [187700.0, 36.0], [181300.0, 23.0], [194100.0, 52.0], [200500.0, 11.0], [206900.0, 30.0], [3400.0, 3.0], [213300.0, 10.0], [219700.0, 1.0], [3900.0, 2.0], [4000.0, 1.0], [71300.0, 1.0], [109700.0, 5.0], [116100.0, 11.0], [122500.0, 5.0], [119300.0, 2.0], [147000.0, 44.0], [140600.0, 1.0], [153400.0, 2.0], [159800.0, 119.0], [166200.0, 19.0], [179000.0, 6.0], [172600.0, 22.0], [185400.0, 24.0], [191800.0, 11.0], [204600.0, 37.0], [198200.0, 38.0], [211000.0, 7.0], [217400.0, 8.0], [138300.0, 2.0], [131900.0, 5.0], [144700.0, 1.0], [151100.0, 48.0], [157500.0, 108.0], [163900.0, 11.0], [170300.0, 15.0], [176700.0, 6.0], [183100.0, 26.0], [195900.0, 26.0], [189500.0, 9.0], [202300.0, 40.0], [208700.0, 29.0], [215100.0, 2.0], [221500.0, 109.0], [73600.0, 1.0], [76800.0, 1.0], [99200.0, 3.0], [105600.0, 1.0], [118400.0, 1.0], [115200.0, 3.0], [121600.0, 8.0], [128000.0, 7.0], [134400.0, 6.0], [140800.0, 72.0], [147200.0, 3.0], [153600.0, 1.0], [160000.0, 26.0], [166400.0, 12.0], [179200.0, 11.0], [172800.0, 18.0], [185600.0, 31.0], [192000.0, 21.0], [198400.0, 34.0], [211200.0, 11.0], [204800.0, 9.0], [217600.0, 26.0], [138500.0, 5.0], [132100.0, 1.0], [151300.0, 8.0], [157700.0, 8.0], [170500.0, 3.0], [164100.0, 63.0], [176900.0, 18.0], [183300.0, 8.0], [196100.0, 5.0], [189700.0, 26.0], [202500.0, 8.0], [208900.0, 13.0], [215300.0, 16.0], [221700.0, 67.0], [73500.0, 1.0], [99100.0, 7.0], [105500.0, 11.0], [108700.0, 2.0], [111900.0, 27.0], [118300.0, 2.0], [115100.0, 2.0], [121500.0, 1.0], [124700.0, 22.0], [127900.0, 3.0], [142600.0, 5.0], [155400.0, 4.0], [149000.0, 14.0], [161800.0, 7.0], [168200.0, 6.0], [174600.0, 6.0], [187400.0, 3.0], [181000.0, 5.0], [193800.0, 11.0], [200200.0, 16.0], [206600.0, 17.0], [213000.0, 28.0], [133900.0, 5.0], [140300.0, 1.0], [153100.0, 2.0], [159500.0, 5.0], [165900.0, 7.0], [178700.0, 56.0], [172300.0, 18.0], [185100.0, 13.0], [191500.0, 10.0], [204300.0, 10.0], [197900.0, 21.0], [210700.0, 24.0], [217100.0, 7.0], [101400.0, 7.0], [104600.0, 13.0], [114200.0, 1.0], [111000.0, 1.0], [117400.0, 9.0], [120600.0, 17.0], [130200.0, 1.0], [127000.0, 3.0], [131600.0, 9.0], [150800.0, 13.0], [163600.0, 54.0], [157200.0, 6.0], [170000.0, 7.0], [176400.0, 6.0], [182800.0, 4.0], [195600.0, 8.0], [189200.0, 23.0], [202000.0, 18.0], [208400.0, 24.0], [214800.0, 7.0], [221200.0, 49.0], [135700.0, 6.0], [142100.0, 19.0], [148500.0, 1.0], [154900.0, 9.0], [161300.0, 3.0], [167700.0, 28.0], [174100.0, 6.0], [186900.0, 5.0], [180500.0, 11.0], [193300.0, 23.0], [199700.0, 27.0], [212500.0, 8.0], [206100.0, 9.0], [106900.0, 3.0], [113300.0, 17.0], [126100.0, 19.0], [133400.0, 1.0], [146200.0, 5.0], [139800.0, 3.0], [152600.0, 10.0], [159000.0, 5.0], [171800.0, 8.0], [165400.0, 6.0], [178200.0, 9.0], [184600.0, 3.0], [191000.0, 20.0], [203800.0, 18.0], [197400.0, 3.0], [210200.0, 15.0], [216600.0, 2.0], [137500.0, 1.0], [143900.0, 36.0], [163100.0, 22.0], [156700.0, 6.0], [169500.0, 25.0], [175900.0, 9.0], [182300.0, 8.0], [195100.0, 13.0], [188700.0, 9.0], [201500.0, 8.0], [207900.0, 52.0], [214300.0, 5.0], [220700.0, 115.0], [102800.0, 12.0], [106000.0, 13.0], [112400.0, 3.0], [115600.0, 3.0], [122000.0, 2.0], [118800.0, 1.0], [125200.0, 2.0], [128400.0, 1.0], [143200.0, 1.0], [149600.0, 9.0], [162400.0, 10.0], [156000.0, 31.0], [168800.0, 10.0], [188000.0, 8.0], [181600.0, 6.0], [194400.0, 11.0], [200800.0, 6.0], [207200.0, 11.0], [213600.0, 2.0], [220000.0, 9.0], [134500.0, 7.0], [147300.0, 2.0], [140900.0, 9.0], [153700.0, 10.0], [160100.0, 5.0], [166500.0, 10.0], [179300.0, 17.0], [172900.0, 24.0], [185700.0, 13.0], [192100.0, 31.0], [198500.0, 8.0], [211300.0, 18.0], [204900.0, 8.0], [217700.0, 8.0], [73900.0, 2.0], [83500.0, 1.0], [102700.0, 1.0], [109100.0, 30.0], [118700.0, 8.0], [121900.0, 21.0], [125100.0, 1.0], [128300.0, 7.0], [145000.0, 2.0], [151400.0, 7.0], [157800.0, 16.0], [164200.0, 51.0], [177000.0, 4.0], [183400.0, 6.0], [196200.0, 7.0], [189800.0, 15.0], [202600.0, 19.0], [209000.0, 22.0], [215400.0, 1.0], [221800.0, 4.0], [136300.0, 36.0], [33300.0, 1.0], [142700.0, 70.0], [155500.0, 11.0], [161900.0, 109.0], [168300.0, 32.0], [174700.0, 8.0], [187500.0, 8.0], [181100.0, 11.0], [193900.0, 17.0], [200300.0, 14.0], [206700.0, 9.0], [213100.0, 8.0], [219500.0, 4.0], [101800.0, 19.0], [114600.0, 8.0], [117800.0, 2.0], [121000.0, 17.0], [124200.0, 4.0], [130600.0, 5.0], [146800.0, 4.0], [140400.0, 7.0], [153200.0, 11.0], [159600.0, 9.0], [166000.0, 4.0], [178800.0, 9.0], [172400.0, 7.0], [185200.0, 2.0], [191600.0, 27.0], [204400.0, 23.0], [198000.0, 8.0], [210800.0, 29.0], [217200.0, 8.0], [131700.0, 21.0], [144500.0, 8.0], [150900.0, 3.0], [157300.0, 19.0], [163700.0, 4.0], [170100.0, 19.0], [176500.0, 17.0], [182900.0, 10.0], [195700.0, 41.0], [189300.0, 1.0], [202100.0, 12.0], [208500.0, 68.0], [214900.0, 1.0], [221300.0, 14.0], [104100.0, 2.0], [110500.0, 28.0], [107300.0, 1.0], [116900.0, 1.0], [120100.0, 7.0], [123300.0, 27.0], [129700.0, 5.0], [135800.0, 9.0], [142200.0, 4.0], [155000.0, 5.0], [161400.0, 36.0], [167800.0, 18.0], [174200.0, 28.0], [187000.0, 17.0], [180600.0, 30.0], [193400.0, 15.0], [199800.0, 17.0], [212600.0, 3.0], [206200.0, 14.0], [219000.0, 2.0], [146300.0, 5.0], [152700.0, 5.0], [159100.0, 6.0], [165500.0, 5.0], [178300.0, 5.0], [184700.0, 1.0], [191100.0, 22.0], [203900.0, 23.0], [197500.0, 19.0], [210300.0, 60.0], [216700.0, 8.0], [87200.0, 2.0], [103200.0, 9.0], [116000.0, 8.0], [122400.0, 2.0], [119200.0, 8.0], [125600.0, 4.0], [136000.0, 2.0], [142400.0, 5.0], [155200.0, 9.0], [148800.0, 53.0], [161600.0, 15.0], [168000.0, 8.0], [174400.0, 22.0], [187200.0, 15.0], [180800.0, 6.0], [193600.0, 10.0], [200000.0, 11.0], [212800.0, 17.0], [206400.0, 22.0], [219200.0, 2.0], [133700.0, 48.0], [140100.0, 1.0], [152900.0, 76.0], [159300.0, 9.0], [165700.0, 22.0], [178500.0, 23.0], [172100.0, 10.0], [184900.0, 17.0], [191300.0, 4.0], [204100.0, 31.0], [197700.0, 23.0], [210500.0, 17.0], [216900.0, 23.0], [106300.0, 2.0], [103100.0, 1.0], [115900.0, 7.0], [122300.0, 22.0], [119100.0, 1.0], [125500.0, 1.0], [128700.0, 8.0], [137800.0, 5.0], [144200.0, 12.0], [150600.0, 49.0], [163400.0, 34.0], [157000.0, 42.0], [169800.0, 7.0], [176200.0, 9.0], [182600.0, 14.0], [195400.0, 19.0], [189000.0, 12.0], [201800.0, 27.0], [208200.0, 4.0], [214600.0, 6.0], [221000.0, 9.0], [148300.0, 2.0], [154700.0, 33.0], [161100.0, 15.0], [167500.0, 6.0], [173900.0, 10.0], [186700.0, 6.0], [180300.0, 5.0], [193100.0, 9.0], [199500.0, 7.0], [212300.0, 16.0], [205900.0, 13.0], [99000.0, 48.0], [108600.0, 2.0], [111800.0, 4.0], [118200.0, 16.0], [121400.0, 2.0], [124600.0, 18.0], [131000.0, 39.0], [133200.0, 2.0], [146000.0, 3.0], [139600.0, 14.0], [152400.0, 25.0], [158800.0, 6.0], [165200.0, 19.0], [171600.0, 7.0], [178000.0, 16.0], [184400.0, 19.0], [190800.0, 21.0], [203600.0, 8.0], [197200.0, 25.0], [210000.0, 9.0], [216400.0, 43.0], [143700.0, 1.0], [150100.0, 5.0], [156500.0, 6.0], [162900.0, 12.0], [169300.0, 3.0], [175700.0, 11.0], [182100.0, 4.0], [194900.0, 13.0], [188500.0, 40.0], [201300.0, 10.0], [207700.0, 6.0], [214100.0, 9.0], [220500.0, 25.0], [78900.0, 1.0], [101300.0, 1.0], [107700.0, 8.0], [117300.0, 6.0], [120500.0, 2.0], [126900.0, 7.0], [130100.0, 3.0], [135000.0, 22.0], [141400.0, 9.0], [154200.0, 1.0], [147800.0, 5.0], [160600.0, 6.0], [167000.0, 18.0], [179800.0, 26.0], [173400.0, 5.0], [186200.0, 18.0], [192600.0, 3.0], [199000.0, 57.0], [211800.0, 19.0], [205400.0, 17.0], [218200.0, 11.0], [139100.0, 5.0], [145500.0, 2.0], [151900.0, 11.0], [158300.0, 4.0], [171100.0, 8.0], [164700.0, 88.0], [177500.0, 9.0], [183900.0, 11.0], [190300.0, 16.0], [203100.0, 20.0], [196700.0, 8.0], [209500.0, 27.0], [215900.0, 7.0], [222300.0, 11.0], [94000.0, 1.0], [100400.0, 7.0], [113200.0, 14.0], [119600.0, 13.0], [126000.0, 15.0], [129200.0, 1.0], [132000.0, 1.0], [138400.0, 6.0], [144800.0, 17.0], [151200.0, 38.0], [157600.0, 24.0], [170400.0, 9.0], [164000.0, 21.0], [176800.0, 17.0], [183200.0, 29.0], [196000.0, 27.0], [189600.0, 19.0], [202400.0, 25.0], [208800.0, 27.0], [215200.0, 7.0], [221600.0, 59.0], [155300.0, 31.0], [148900.0, 4.0], [161700.0, 9.0], [168100.0, 7.0], [174500.0, 6.0], [187300.0, 17.0], [180900.0, 9.0], [193700.0, 10.0], [200100.0, 12.0], [212900.0, 19.0], [206500.0, 24.0], [219300.0, 2.0], [103500.0, 15.0], [106700.0, 16.0], [113100.0, 4.0], [116300.0, 3.0], [122700.0, 1.0], [119500.0, 1.0], [125900.0, 2.0], [129100.0, 2.0], [146600.0, 2.0], [140200.0, 40.0], [153000.0, 22.0], [159400.0, 7.0], [165800.0, 28.0], [178600.0, 51.0], [172200.0, 9.0], [185000.0, 14.0], [191400.0, 26.0], [204200.0, 6.0], [197800.0, 23.0], [210600.0, 17.0], [217000.0, 39.0], [35300.0, 2.0], [144300.0, 2.0], [150700.0, 5.0], [163500.0, 22.0], [157100.0, 2.0], [169900.0, 4.0], [176300.0, 11.0], [182700.0, 2.0], [195500.0, 5.0], [189100.0, 34.0], [201900.0, 11.0], [208300.0, 18.0], [221100.0, 9.0], [214700.0, 6.0], [99400.0, 1.0], [109000.0, 3.0], [112200.0, 1.0], [118600.0, 5.0], [115400.0, 7.0], [128200.0, 11.0], [135600.0, 10.0], [142000.0, 20.0], [148400.0, 20.0], [161200.0, 3.0], [167600.0, 6.0], [174000.0, 3.0], [186800.0, 2.0], [180400.0, 15.0], [193200.0, 16.0], [199600.0, 17.0], [212400.0, 5.0], [206000.0, 3.0], [218800.0, 1.0], [133300.0, 1.0], [146100.0, 2.0], [152500.0, 4.0], [158900.0, 5.0], [171700.0, 12.0], [165300.0, 8.0], [178100.0, 9.0], [184500.0, 10.0], [190900.0, 26.0], [203700.0, 16.0], [197300.0, 13.0], [210100.0, 18.0], [216500.0, 10.0], [4100.0, 3.0], [104900.0, 11.0], [114500.0, 7.0], [117700.0, 4.0], [120900.0, 1.0], [130500.0, 10.0], [127300.0, 7.0], [137400.0, 3.0], [143800.0, 1.0], [150200.0, 4.0], [163000.0, 61.0], [156600.0, 5.0], [169400.0, 8.0], [175800.0, 9.0], [182200.0, 3.0], [195000.0, 2.0], [188600.0, 26.0], [201400.0, 12.0], [207800.0, 26.0], [220600.0, 22.0], [214200.0, 1.0], [135100.0, 2.0], [141500.0, 40.0], [154300.0, 17.0], [147900.0, 6.0], [160700.0, 11.0], [167100.0, 23.0], [179900.0, 34.0], [173500.0, 8.0], [186300.0, 26.0], [192700.0, 28.0], [199100.0, 34.0], [205500.0, 10.0], [211900.0, 3.0], [218300.0, 5.0], [78400.0, 1.0], [110400.0, 6.0], [116800.0, 12.0], [120000.0, 4.0], [131200.0, 8.0], [137600.0, 36.0], [144000.0, 42.0], [150400.0, 3.0], [163200.0, 8.0], [156800.0, 26.0], [169600.0, 18.0], [176000.0, 12.0], [182400.0, 10.0], [195200.0, 26.0], [188800.0, 10.0], [201600.0, 17.0], [208000.0, 49.0], [220800.0, 38.0], [227200.0, 1.0], [135300.0, 3.0], [141700.0, 4.0], [154500.0, 27.0], [148100.0, 9.0], [160900.0, 118.0], [167300.0, 4.0], [180100.0, 10.0], [173700.0, 33.0], [186500.0, 38.0], [192900.0, 4.0], [199300.0, 13.0], [212100.0, 5.0], [205700.0, 68.0], [84700.0, 1.0], [100700.0, 2.0], [103900.0, 9.0], [113500.0, 1.0], [116700.0, 12.0], [119900.0, 16.0], [126300.0, 2.0], [133000.0, 31.0], [145800.0, 46.0], [139400.0, 2.0], [158600.0, 30.0], [171400.0, 19.0], [165000.0, 23.0], [177800.0, 2.0], [184200.0, 11.0], [190600.0, 2.0], [203400.0, 13.0], [197000.0, 17.0], [209800.0, 49.0], [216200.0, 52.0], [137100.0, 8.0], [143500.0, 6.0], [149900.0, 25.0], [162700.0, 13.0], [156300.0, 4.0], [169100.0, 5.0], [175500.0, 20.0], [188300.0, 9.0], [181900.0, 40.0], [194700.0, 23.0], [201100.0, 16.0], [207500.0, 18.0], [220300.0, 47.0], [213900.0, 1.0], [77400.0, 1.0], [106200.0, 12.0], [109400.0, 2.0], [112600.0, 20.0], [122200.0, 1.0], [119000.0, 2.0], [125400.0, 23.0], [128600.0, 2.0], [134800.0, 3.0], [141200.0, 3.0], [154000.0, 11.0], [147600.0, 76.0], [160400.0, 19.0], [166800.0, 12.0], [179600.0, 4.0], [173200.0, 23.0], [186000.0, 25.0], [192400.0, 6.0], [198800.0, 8.0], [211600.0, 4.0], [205200.0, 18.0], [218000.0, 9.0], [132500.0, 3.0], [138900.0, 39.0], [145300.0, 4.0], [151700.0, 67.0], [158100.0, 87.0], [170900.0, 22.0], [164500.0, 13.0], [177300.0, 8.0], [183700.0, 35.0], [196500.0, 27.0], [190100.0, 2.0], [202900.0, 20.0], [209300.0, 37.0], [215700.0, 31.0], [222100.0, 1.0], [76500.0, 1.0], [98900.0, 3.0], [102100.0, 6.0], [105300.0, 11.0], [108500.0, 1.0], [118100.0, 5.0], [114900.0, 3.0], [121300.0, 11.0], [124500.0, 1.0], [127700.0, 6.0], [136600.0, 2.0], [143000.0, 4.0], [149400.0, 58.0], [162200.0, 20.0], [155800.0, 76.0], [168600.0, 11.0], [175000.0, 19.0], [187800.0, 31.0], [181400.0, 8.0], [194200.0, 32.0], [200600.0, 10.0], [207000.0, 14.0], [213400.0, 4.0], [219800.0, 2.0], [134300.0, 18.0], [147100.0, 1.0], [153500.0, 85.0], [159900.0, 5.0], [166300.0, 26.0], [179100.0, 2.0], [172700.0, 21.0], [185500.0, 12.0], [191900.0, 9.0], [204700.0, 17.0], [198300.0, 11.0], [211100.0, 13.0], [217500.0, 53.0], [107600.0, 6.0], [114000.0, 8.0], [110800.0, 1.0], [117200.0, 4.0], [126800.0, 18.0], [130000.0, 1.0], [133600.0, 2.0], [146400.0, 48.0], [159200.0, 39.0], [172000.0, 13.0], [165600.0, 16.0], [178400.0, 8.0], [184800.0, 16.0], [191200.0, 6.0], [204000.0, 34.0], [197600.0, 17.0], [210400.0, 8.0], [216800.0, 7.0], [131300.0, 1.0], [137700.0, 7.0], [144100.0, 8.0], [150500.0, 27.0], [163300.0, 26.0], [156900.0, 10.0], [169700.0, 26.0], [176100.0, 3.0], [182500.0, 23.0], [195300.0, 31.0], [188900.0, 7.0], [201700.0, 16.0], [208100.0, 4.0], [214500.0, 4.0], [220900.0, 28.0], [85100.0, 2.0], [101100.0, 11.0], [113900.0, 26.0], [120300.0, 14.0], [126700.0, 1.0], [123500.0, 4.0], [129900.0, 13.0], [135400.0, 2.0], [154600.0, 8.0], [148200.0, 78.0], [161000.0, 4.0], [167400.0, 7.0], [180200.0, 3.0], [173800.0, 20.0], [186600.0, 15.0], [193000.0, 34.0], [199400.0, 12.0], [212200.0, 5.0], [205800.0, 29.0], [133100.0, 1.0], [139500.0, 26.0], [152300.0, 68.0], [158700.0, 35.0], [171500.0, 22.0], [165100.0, 19.0], [177900.0, 14.0], [184300.0, 16.0], [190700.0, 6.0], [203500.0, 13.0], [197100.0, 22.0], [209900.0, 12.0], [216300.0, 50.0], [222700.0, 1.0], [229100.0, 1.0], [103400.0, 2.0], [109800.0, 24.0], [122600.0, 11.0], [119400.0, 7.0], [137200.0, 1.0], [143600.0, 6.0], [150000.0, 72.0], [162800.0, 11.0], [156400.0, 42.0], [169200.0, 4.0], [175600.0, 7.0], [188400.0, 15.0], [182000.0, 21.0], [194800.0, 8.0], [201200.0, 13.0], [207600.0, 21.0], [214000.0, 5.0], [220400.0, 37.0], [134900.0, 4.0], [141300.0, 1.0], [154100.0, 73.0], [147700.0, 2.0], [160500.0, 1.0], [166900.0, 23.0], [179700.0, 11.0], [173300.0, 11.0], [186100.0, 18.0], [192500.0, 7.0], [198900.0, 7.0], [211700.0, 11.0], [205300.0, 17.0], [218100.0, 5.0], [102500.0, 12.0], [112100.0, 1.0], [118500.0, 1.0], [115300.0, 23.0], [121700.0, 9.0], [124900.0, 1.0], [128100.0, 1.0], [139000.0, 2.0], [145400.0, 15.0], [151800.0, 35.0], [158200.0, 8.0], [171000.0, 10.0], [164600.0, 10.0], [177400.0, 7.0], [183800.0, 27.0], [196600.0, 20.0], [190200.0, 18.0], [203000.0, 31.0], [209400.0, 27.0], [215800.0, 8.0], [222200.0, 7.0], [143100.0, 1.0], [149500.0, 2.0], [162300.0, 21.0], [155900.0, 29.0], [168700.0, 4.0], [175100.0, 18.0], [187900.0, 25.0], [181500.0, 14.0], [194300.0, 20.0], [200700.0, 8.0], [207100.0, 7.0], [213500.0, 5.0], [219900.0, 7.0], [98400.0, 1.0], [104800.0, 3.0], [111200.0, 26.0], [120800.0, 4.0], [124000.0, 21.0], [130400.0, 10.0], [139200.0, 2.0], [145600.0, 13.0], [152000.0, 6.0], [158400.0, 7.0], [171200.0, 11.0], [164800.0, 9.0], [177600.0, 7.0], [184000.0, 5.0], [190400.0, 8.0], [203200.0, 7.0], [196800.0, 4.0], [209600.0, 31.0], [216000.0, 8.0], [222400.0, 5.0], [136900.0, 45.0], [143300.0, 29.0], [162500.0, 48.0], [156100.0, 33.0], [168900.0, 15.0], [175300.0, 4.0], [181700.0, 10.0], [188100.0, 8.0], [194500.0, 2.0], [200900.0, 6.0], [207300.0, 33.0], [213700.0, 2.0], [220100.0, 9.0], [111100.0, 5.0], [117500.0, 11.0], [120700.0, 3.0], [123900.0, 9.0], [130300.0, 4.0], [134600.0, 2.0], [147400.0, 2.0], [141000.0, 4.0], [153800.0, 28.0], [160200.0, 4.0], [166600.0, 4.0], [179400.0, 11.0], [173000.0, 17.0], [185800.0, 16.0], [192200.0, 31.0], [198600.0, 5.0], [211400.0, 2.0], [205000.0, 11.0], [217800.0, 10.0], [132300.0, 27.0], [145100.0, 12.0], [157900.0, 16.0], [170700.0, 13.0], [164300.0, 33.0], [177100.0, 8.0], [183500.0, 8.0], [196300.0, 17.0], [189900.0, 1.0], [202700.0, 14.0], [209100.0, 55.0], [215500.0, 40.0], [221900.0, 10.0], [107000.0, 10.0], [116600.0, 5.0], [126200.0, 2.0], [123000.0, 5.0], [136400.0, 2.0], [142800.0, 1.0], [155600.0, 1.0], [149200.0, 8.0], [162000.0, 29.0], [168400.0, 24.0], [174800.0, 13.0], [187600.0, 26.0], [181200.0, 20.0], [194000.0, 29.0], [200400.0, 19.0], [206800.0, 41.0], [213200.0, 6.0], [219600.0, 1.0], [134100.0, 2.0], [146900.0, 4.0], [140500.0, 2.0], [153300.0, 4.0], [159700.0, 7.0], [166100.0, 5.0], [178900.0, 8.0], [172500.0, 16.0], [185300.0, 2.0], [191700.0, 21.0], [204500.0, 20.0], [198100.0, 15.0], [210900.0, 9.0], [217300.0, 10.0], [74100.0, 1.0], [99700.0, 10.0], [109300.0, 1.0], [112500.0, 6.0], [122100.0, 1.0], [118900.0, 22.0], [125300.0, 10.0], [128500.0, 1.0], [138200.0, 38.0], [144600.0, 66.0], [151000.0, 2.0], [163800.0, 17.0], [157400.0, 9.0], [170200.0, 10.0], [176600.0, 12.0], [183000.0, 21.0], [195800.0, 32.0], [189400.0, 3.0], [202200.0, 15.0], [208600.0, 26.0], [215000.0, 1.0], [221400.0, 126.0], [19100.0, 1.0], [135900.0, 1.0], [142300.0, 6.0], [155100.0, 15.0], [148700.0, 26.0], [161500.0, 9.0], [167900.0, 6.0], [174300.0, 20.0], [187100.0, 39.0], [180700.0, 31.0], [193500.0, 11.0], [199900.0, 9.0], [212700.0, 7.0], [206300.0, 50.0], [219100.0, 3.0], [82800.0, 1.0], [98800.0, 3.0], [102000.0, 2.0], [108400.0, 12.0], [118000.0, 7.0], [121200.0, 9.0], [130800.0, 3.0], [127600.0, 4.0]], "isOverall": false, "label": "getProfile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 229100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 99991.0, "minX": 3.0, "ticks": [[0, "Requests having \nresponse time <= 2,000ms"], [1, "Requests having \nresponse time > 2,000ms and <= 4,000ms"], [2, "Requests having \nresponse time > 4,000ms"], [3, "Requests in error"]], "maxY": 99991.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 2,000ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 2,000ms and <= 4,000ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 4,000ms", "isController": false}, {"data": [[3.0, 99991.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.63906728E12, "maxY": 15811.533687087935, "series": [{"data": [[1.6390674E12, 15811.533687087935], [1.63906752E12, 56.63880685174238], [1.63906734E12, 15809.537431048077], [1.63906746E12, 3401.8659895961896], [1.63906728E12, 12120.892086330947], [1.63906776E12, 2.0]], "isOverall": false, "label": "Api CMS", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63906776E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 20.262948207171306, "minX": 1.0, "maxY": 221228.0, "series": [{"data": [[2.0, 75764.33333333333], [3.0, 18438.833333333336], [4.0, 27.727272727272727], [5.0, 24.499999999999996], [6.0, 22.677419354838708], [7.0, 21.484536082474232], [8.0, 20.655405405405403], [9.0, 20.262948207171306], [10.0, 21.911764705882344], [11.0, 20.36631016042782], [12.0, 21.04237288135592], [13.0, 21.853146853146857], [14.0, 21.593417231364928], [15.0, 21.498214285714283], [16.0, 21.686868686868713], [17.0, 22.224366041896342], [18.0, 23.142342342342353], [19.0, 24.201483312731792], [20.0, 25.284153005464447], [21.0, 25.22580645161288], [22.0, 25.417190775681345], [23.0, 26.961240310077518], [24.0, 26.338461538461534], [25.0, 29.818548387096776], [26.0, 31.06748466257669], [27.0, 28.792452830188676], [28.0, 30.657303370786508], [29.0, 41.759259259259245], [30.0, 27.781818181818178], [31.0, 30.931506849315085], [8353.0, 234.83333333333334], [8513.0, 41.0], [33.0, 29.853932584269668], [32.0, 32.11428571428572], [8769.0, 42.0], [8737.0, 43.0], [8833.0, 63.4], [8993.0, 42.5], [35.0, 30.02816901408451], [34.0, 30.057471264367816], [9249.0, 43.0], [9313.0, 45.0], [9217.0, 45.0], [9441.0, 35.0], [9377.0, 40.0], [37.0, 31.86274509803921], [36.0, 33.652173913043484], [9601.0, 42.0], [9473.0, 40.5], [9505.0, 43.0], [9793.0, 51.0], [10113.0, 42.666666666666664], [10049.0, 64.0], [10081.0, 67.66666666666667], [9857.0, 83.5], [39.0, 47.153846153846146], [38.0, 49.14285714285714], [10337.0, 43.0], [10625.0, 71.0], [10689.0, 43.0], [10433.0, 80.4], [41.0, 43.404255319148945], [40.0, 34.862068965517246], [10945.0, 41.0], [10817.0, 44.0], [10913.0, 40.0], [10977.0, 46.42857142857143], [11105.0, 48.0], [43.0, 53.78205128205129], [42.0, 44.85526315789474], [11297.0, 41.0], [11265.0, 89.0], [11329.0, 41.0], [11425.0, 45.0], [11681.0, 85.0], [45.0, 54.94230769230771], [44.0, 53.515463917525786], [11809.0, 41.0], [11777.0, 49.333333333333336], [12193.0, 45.333333333333336], [12225.0, 35.0], [12129.0, 38.0], [11969.0, 39.666666666666664], [46.0, 59.36842105263159], [47.0, 56.789189189189194], [12001.0, 91.0], [12353.0, 72.0], [12769.0, 47.5], [12449.0, 94.0], [12513.0, 40.0], [12609.0, 42.0], [49.0, 57.85333333333334], [48.0, 60.512195121951194], [13025.0, 41.0], [13057.0, 41.0], [13089.0, 81.5], [13249.0, 38.5], [51.0, 56.60532150776054], [50.0, 56.961340206185525], [13569.0, 47.0], [13601.0, 36.0], [13697.0, 38.0], [13729.0, 82.0], [52.0, 59.001633986928134], [53.0, 58.314327485380126], [13825.0, 63.0], [13953.0, 1330.0], [14145.0, 43.0], [55.0, 61.27784431137722], [54.0, 60.476501305483005], [14369.0, 42.0], [14561.0, 41.0], [14625.0, 50.0], [14753.0, 47.0], [57.0, 60.6813441483198], [56.0, 60.290711700844426], [14881.0, 83.2], [15073.0, 40.0], [15201.0, 36.0], [15265.0, 41.5], [15297.0, 52.0], [15169.0, 1615.0], [59.0, 60.45012165450124], [58.0, 59.387940841865756], [15457.0, 724.5], [15489.0, 111393.375], [15649.0, 720.0], [15681.0, 751.25], [15713.0, 1902.25], [15809.0, 143598.22950819667], [61.0, 61.51741293532344], [60.0, 60.78347934918647], [63.0, 58.42097488921706], [62.0, 60.04945054945057], [66.0, 61.21682847896443], [64.0, 59.56043956043961], [67.0, 61.64475743348985], [65.0, 59.32656023222062], [71.0, 60.49275362318839], [69.0, 62.61759999999998], [70.0, 61.0552763819095], [68.0, 59.53333333333332], [75.0, 59.1997084548105], [73.0, 61.72985074626863], [72.0, 60.01382488479265], [74.0, 62.63467048710601], [78.0, 62.342485549132896], [77.0, 60.53269754768387], [76.0, 61.19912152269403], [79.0, 63.89114658925985], [83.0, 62.85240464344941], [82.0, 62.13102409638549], [81.0, 62.209439528023566], [80.0, 59.19896640826873], [87.0, 61.061310782241065], [85.0, 63.885245901639344], [86.0, 61.04305283757338], [84.0, 61.01018675721556], [90.0, 66.1428571428571], [91.0, 65.37134502923982], [89.0, 65.75578406169669], [88.0, 62.56986899563321], [95.0, 57.899543378995396], [93.0, 65.99647887323945], [92.0, 66.53759398496244], [94.0, 63.06779661016952], [99.0, 58.199999999999996], [98.0, 56.04615384615386], [97.0, 61.04000000000002], [96.0, 63.662222222222205], [103.0, 53.10691823899369], [100.0, 62.04761904761903], [102.0, 55.674157303370805], [101.0, 55.068571428571424], [107.0, 50.20175438596488], [105.0, 53.004608294930854], [104.0, 59.27380952380949], [106.0, 52.4054054054054], [111.0, 55.410774410774415], [108.0, 55.85135135135134], [110.0, 49.431734317343164], [109.0, 52.11261261261261], [114.0, 51.339832869080716], [113.0, 52.31034482758627], [112.0, 48.38972809667674], [115.0, 51.474201474201465], [119.0, 50.97923875432527], [117.0, 52.2042105263158], [118.0, 53.27462121212117], [116.0, 51.36009174311929], [122.0, 48.361344537815135], [121.0, 52.10338680926916], [120.0, 51.965244865718844], [123.0, 51.14551083591326], [127.0, 52.25705794947992], [126.0, 52.913352272727245], [125.0, 52.63179347826087], [124.0, 51.14855570839062], [133.0, 54.539215686274524], [132.0, 53.22077922077916], [131.0, 52.566801619433214], [129.0, 50.73956594323871], [135.0, 52.569230769230785], [134.0, 53.56072351421192], [130.0, 52.099637681159386], [128.0, 52.65023847376793], [143.0, 51.76162790697675], [141.0, 52.939130434782584], [140.0, 56.88799999999997], [139.0, 53.97202797202797], [137.0, 58.04406779661014], [142.0, 50.96774193548384], [136.0, 51.698461538461515], [138.0, 51.45353159851302], [151.0, 59.528985507246375], [149.0, 54.4621212121212], [148.0, 55.430656934306576], [147.0, 56.09589041095891], [145.0, 56.18705035971224], [144.0, 61.34911242603549], [146.0, 55.339449541284395], [150.0, 47.03521126760564], [159.0, 53.25675675675673], [158.0, 51.40123456790126], [157.0, 54.42948717948718], [155.0, 53.41935483870969], [154.0, 50.38787878787879], [152.0, 52.1065573770492], [156.0, 54.163522012578625], [153.0, 52.96874999999998], [167.0, 52.769230769230724], [166.0, 49.51595744680851], [164.0, 52.51891891891891], [163.0, 51.46927374301677], [161.0, 55.770588235294156], [160.0, 60.75555555555556], [165.0, 55.267080745341616], [162.0, 54.38265306122449], [174.0, 47.7], [175.0, 46.208480565370984], [173.0, 46.73431734317343], [172.0, 45.889261744966475], [171.0, 45.81150159744408], [170.0, 48.130909090909114], [169.0, 50.191011235955045], [168.0, 48.29577464788733], [178.0, 41.85582822085886], [177.0, 49.13230769230773], [179.0, 49.724233983286915], [181.0, 47.941724941724935], [180.0, 48.71820448877808], [183.0, 47.17968749999998], [182.0, 46.37249999999995], [176.0, 47.27054794520547], [187.0, 46.8253588516746], [189.0, 47.67574257425745], [188.0, 50.450402144772106], [191.0, 49.60349854227403], [190.0, 47.99442896935934], [186.0, 49.25], [184.0, 48.94654788418707], [185.0, 48.93095238095238], [192.0, 47.68882175226584], [194.0, 48.53600000000002], [193.0, 43.08923076923076], [197.0, 45.41924398625428], [198.0, 43.602941176470594], [196.0, 46.20158102766796], [195.0, 44.41153846153847], [199.0, 47.203252032520304], [206.0, 49.58549222797928], [207.0, 47.25324675324675], [205.0, 44.2983425414365], [204.0, 46.502564102564115], [201.0, 47.78733031674205], [200.0, 44.73529411764706], [202.0, 49.55172413793103], [203.0, 48.34736842105265], [210.0, 51.05882352941175], [208.0, 43.05072463768115], [209.0, 47.61417322834645], [211.0, 52.09708737864078], [212.0, 47.42718446601939], [215.0, 45.8684210526316], [214.0, 50.73214285714286], [213.0, 53.347826086956516], [221.0, 55.73684210526316], [220.0, 58.949999999999996], [217.0, 47.36585365853658], [219.0, 55.1904761904762], [216.0, 52.43589743589743], [218.0, 68.89999999999999], [222.0, 70.75], [223.0, 49.476190476190474], [225.0, 63.2], [224.0, 33.714285714285715], [8176.0, 54.0], [8384.0, 297.0], [8512.0, 53.0], [8544.0, 38.5], [8768.0, 41.0], [9088.0, 47.0], [8992.0, 47.5], [9216.0, 39.0], [9248.0, 44.0], [9408.0, 75.0], [9344.0, 46.666666666666664], [9312.0, 42.5], [9664.0, 58.0], [9504.0, 36.0], [9792.0, 43.0], [9856.0, 98.0], [10432.0, 47.5], [10368.0, 60.0], [10336.0, 40.0], [10720.0, 40.5], [10624.0, 53.0], [10560.0, 41.0], [10592.0, 58.5], [10752.0, 88.0], [10816.0, 41.0], [10912.0, 43.0], [10944.0, 44.5], [10976.0, 41.333333333333336], [11040.0, 72.0], [11168.0, 41.0], [11104.0, 43.5], [11296.0, 41.333333333333336], [11264.0, 89.0], [11360.0, 46.0], [11680.0, 60.4], [11392.0, 35.0], [11456.0, 99.0], [11584.0, 46.75], [11808.0, 39.0], [12160.0, 224.5], [11936.0, 54.5], [11968.0, 41.0], [12064.0, 38.0], [12128.0, 48.75], [12288.0, 40.0], [12448.0, 77.33333333333333], [12576.0, 40.0], [12608.0, 72.0], [12736.0, 39.0], [12768.0, 41.5], [12800.0, 52.0], [12928.0, 47.0], [12960.0, 37.0], [12992.0, 50.0], [13056.0, 54.0], [13152.0, 41.0], [13248.0, 42.4], [13344.0, 47.0], [13568.0, 40.666666666666664], [13632.0, 43.0], [13920.0, 43.0], [13952.0, 1336.6666666666667], [14464.0, 93.0], [14560.0, 49.0], [15040.0, 58.0], [15200.0, 46.666666666666664], [15264.0, 43.666666666666664], [15296.0, 45.0], [15360.0, 46.0], [15456.0, 737.0], [15488.0, 108034.83333333333], [15520.0, 388.0], [15584.0, 377.0], [15648.0, 709.0], [15712.0, 1412.6666666666667], [15808.0, 215328.21323529413], [8387.0, 291.0], [8611.0, 141.66666666666666], [8643.0, 38.0], [8899.0, 36.0], [8707.0, 44.0], [8867.0, 44.333333333333336], [8771.0, 44.5], [8803.0, 70.0], [8995.0, 39.0], [9059.0, 40.666666666666664], [9411.0, 34.0], [9443.0, 50.0], [9379.0, 46.0], [9347.0, 38.0], [9283.0, 52.0], [9603.0, 38.0], [9507.0, 38.0], [10115.0, 38.0], [10019.0, 35.0], [10083.0, 41.5], [9859.0, 81.0], [10371.0, 76.0], [10499.0, 46.0], [10691.0, 43.0], [10787.0, 33.0], [10979.0, 41.5], [11011.0, 39.5], [11075.0, 38.0], [11203.0, 45.333333333333336], [11363.0, 58.0], [11459.0, 94.0], [11587.0, 40.0], [11811.0, 36.333333333333336], [11939.0, 47.0], [11971.0, 45.666666666666664], [12003.0, 417.0], [12195.0, 46.5], [12227.0, 45.0], [12771.0, 43.0], [12419.0, 37.0], [12451.0, 39.0], [12547.0, 41.5], [12867.0, 102.0], [12931.0, 39.0], [12963.0, 48.0], [13027.0, 40.0], [13091.0, 43.0], [13155.0, 49.0], [13187.0, 41.0], [13219.0, 44.0], [13251.0, 42.666666666666664], [13315.0, 90.66666666666667], [13475.0, 39.75], [13571.0, 40.0], [13667.0, 42.0], [13731.0, 80.0], [13827.0, 42.0], [13923.0, 39.0], [13955.0, 1339.0], [14019.0, 47.5], [14147.0, 77.0], [14403.0, 40.5], [14435.0, 77.0], [14563.0, 56.0], [14659.0, 64.5], [14851.0, 45.0], [15011.0, 40.0], [15235.0, 39.0], [15267.0, 41.0], [15427.0, 44.0], [15395.0, 63.0], [15459.0, 723.5], [15523.0, 316.0], [15491.0, 155305.5], [15587.0, 381.0], [15651.0, 700.0], [15683.0, 762.0], [15715.0, 1050.5], [15811.0, 111476.91856060618], [8177.0, 53.5], [8354.0, 275.0], [8482.0, 37.0], [8514.0, 44.0], [8546.0, 38.0], [8930.0, 61.0], [8866.0, 43.666666666666664], [8834.0, 43.0], [9186.0, 37.0], [8994.0, 39.0], [9058.0, 35.0], [9218.0, 47.0], [9410.0, 46.0], [9474.0, 46.5], [9506.0, 39.0], [9794.0, 35.0], [10018.0, 45.0], [10082.0, 45.0], [9858.0, 34.0], [10242.0, 63.0], [10562.0, 47.0], [10754.0, 39.5], [10786.0, 44.0], [10818.0, 46.25], [10978.0, 41.27272727272728], [11106.0, 39.333333333333336], [11362.0, 45.0], [11458.0, 89.0], [11586.0, 43.0], [11682.0, 266.0], [11746.0, 40.0], [11810.0, 57.5], [11842.0, 36.0], [11970.0, 150.0], [12194.0, 41.0], [12226.0, 55.5], [12450.0, 57.333333333333336], [12642.0, 44.5], [12770.0, 40.0], [12898.0, 41.0], [13026.0, 37.0], [13090.0, 65.16666666666667], [13186.0, 48.0], [13442.0, 42.0], [13570.0, 48.75], [13602.0, 39.0], [13666.0, 46.0], [13730.0, 77.0], [13826.0, 59.0], [13922.0, 36.0], [13954.0, 1259.0], [14114.0, 53.0], [14466.0, 96.5], [14562.0, 38.5], [14658.0, 38.0], [14754.0, 41.0], [14786.0, 52.0], [14818.0, 38.0], [14850.0, 39.0], [14882.0, 120.875], [15042.0, 65.5], [15138.0, 47.0], [15234.0, 46.0], [15266.0, 49.0], [15298.0, 39.0], [15394.0, 51.0], [15458.0, 734.5], [15522.0, 711.5], [15490.0, 212230.0], [15586.0, 712.0], [15618.0, 702.0], [15650.0, 704.0], [15682.0, 754.0], [15778.0, 711.1666666666666], [15810.0, 90859.27586206897], [8613.0, 156.0], [8517.0, 40.0], [8677.0, 36.0], [8869.0, 44.0], [9093.0, 39.2], [9157.0, 40.0], [8997.0, 47.0], [9253.0, 45.5], [9413.0, 36.0], [9381.0, 41.666666666666664], [9285.0, 45.0], [9765.0, 37.0], [10021.0, 41.5], [9861.0, 78.0], [9925.0, 44.0], [10309.0, 44.0], [10245.0, 40.0], [10501.0, 39.0], [10565.0, 42.0], [10373.0, 69.0], [10789.0, 39.0], [10885.0, 69.0], [10917.0, 53.0], [10981.0, 40.5], [11365.0, 50.85714285714286], [11461.0, 88.0], [11589.0, 37.5], [11749.0, 48.6], [11973.0, 50.625], [12133.0, 66.5], [12229.0, 47.0], [12293.0, 44.0], [12325.0, 39.0], [12453.0, 81.0], [12517.0, 41.0], [12549.0, 40.0], [12741.0, 46.5], [13029.0, 40.0], [12837.0, 69.0], [12869.0, 98.0], [12933.0, 42.0], [12965.0, 40.0], [13189.0, 46.0], [13253.0, 45.75], [13285.0, 41.0], [13317.0, 102.0], [13381.0, 37.0], [13477.0, 47.666666666666664], [13573.0, 42.5], [13637.0, 45.5], [13829.0, 54.0], [13893.0, 38.0], [13925.0, 43.0], [14021.0, 38.5], [14053.0, 43.0], [14085.0, 44.333333333333336], [14117.0, 41.0], [14309.0, 40.0], [14469.0, 95.5], [14565.0, 39.0], [14661.0, 95.0], [14821.0, 42.0], [14949.0, 38.0], [15013.0, 46.333333333333336], [15141.0, 504.3333333333333], [15429.0, 45.0], [15589.0, 710.0], [15653.0, 370.0], [15717.0, 1843.6666666666667], [15493.0, 209830.0], [15813.0, 220386.6888888889], [8612.0, 143.9090909090909], [8580.0, 39.0], [8932.0, 41.0], [8868.0, 36.0], [8836.0, 35.0], [8804.0, 65.0], [9092.0, 39.0], [8996.0, 35.0], [9444.0, 56.5], [9412.0, 45.0], [9284.0, 39.0], [9476.0, 42.0], [9572.0, 48.666666666666664], [10148.0, 39.0], [9796.0, 52.0], [10180.0, 92.0], [10212.0, 36.0], [10020.0, 46.0], [10052.0, 55.0], [10084.0, 34.0], [9924.0, 41.0], [10372.0, 74.0], [10500.0, 46.4], [10788.0, 40.666666666666664], [11204.0, 49.0], [10916.0, 39.0], [10980.0, 37.0], [11076.0, 36.0], [11108.0, 38.0], [11332.0, 43.0], [11364.0, 40.0], [11396.0, 37.0], [11460.0, 57.333333333333336], [11812.0, 54.25], [11940.0, 35.0], [11972.0, 51.5], [12004.0, 38.0], [12132.0, 48.0], [12196.0, 41.0], [12228.0, 41.0], [12452.0, 73.5], [12420.0, 38.5], [12516.0, 57.5], [12548.0, 43.2], [12580.0, 43.0], [12740.0, 50.0], [12772.0, 42.0], [12868.0, 93.0], [13028.0, 46.833333333333336], [13156.0, 40.0], [13188.0, 72.33333333333333], [13252.0, 55.0], [13348.0, 36.0], [13476.0, 43.4], [13572.0, 45.666666666666664], [13636.0, 49.5], [13828.0, 60.0], [13924.0, 40.0], [13956.0, 1342.0], [14020.0, 45.0], [14084.0, 39.0], [14116.0, 44.0], [14148.0, 41.333333333333336], [14340.0, 46.0], [14372.0, 40.0], [14532.0, 50.0], [14660.0, 132.0], [14820.0, 46.75], [14852.0, 40.5], [15012.0, 43.666666666666664], [15108.0, 45.0], [15140.0, 319.0], [15396.0, 39.0], [15428.0, 38.0], [15588.0, 377.5], [15684.0, 758.0], [15812.0, 176929.34371523984], [8583.0, 45.0], [8391.0, 298.0], [8615.0, 149.0], [8519.0, 55.0], [8871.0, 46.0], [9063.0, 38.0], [9383.0, 58.0], [9671.0, 67.66666666666667], [9607.0, 47.5], [10151.0, 102.5], [9863.0, 41.25], [9895.0, 39.0], [9927.0, 37.0], [9959.0, 39.0], [10247.0, 35.0], [10695.0, 40.625], [10503.0, 45.2], [10407.0, 41.0], [11175.0, 56.0], [10791.0, 40.0], [10823.0, 39.0], [10919.0, 48.0], [11079.0, 40.75], [11239.0, 60.0], [11687.0, 152.75], [11271.0, 97.0], [11431.0, 46.0], [11527.0, 38.5], [11591.0, 38.666666666666664], [11751.0, 73.0], [12199.0, 78.0], [12231.0, 97.5], [11911.0, 42.5], [11975.0, 47.0], [12007.0, 66.0], [12071.0, 42.0], [12135.0, 41.5], [12711.0, 38.0], [12391.0, 51.5], [12615.0, 40.0], [12647.0, 42.0], [12775.0, 44.333333333333336], [12807.0, 41.0], [12871.0, 96.0], [12935.0, 52.0], [12999.0, 68.0], [13063.0, 38.0], [13095.0, 106.5], [13255.0, 41.0], [13351.0, 40.0], [13415.0, 83.0], [13479.0, 49.0], [13575.0, 42.666666666666664], [13895.0, 43.0], [14023.0, 41.0], [14183.0, 44.5], [14375.0, 38.0], [14407.0, 39.0], [14471.0, 92.6], [14631.0, 42.0], [14663.0, 40.0], [14695.0, 46.0], [14759.0, 45.0], [14855.0, 50.0], [14951.0, 37.0], [15047.0, 42.0], [15175.0, 49.0], [15207.0, 46.0], [15239.0, 37.0], [15367.0, 46.5], [15527.0, 722.0], [15591.0, 727.0], [15719.0, 1046.0], [15783.0, 1492.0], [15815.0, 220444.1666666667], [8179.0, 47.333333333333336], [8614.0, 148.0], [8582.0, 41.0], [8518.0, 40.0], [8934.0, 44.0], [8870.0, 51.0], [9094.0, 45.0], [9190.0, 37.0], [9062.0, 42.0], [9414.0, 41.0], [9286.0, 55.0], [9702.0, 38.0], [10150.0, 93.0], [9862.0, 55.111111111111114], [9894.0, 36.0], [10086.0, 36.0], [10374.0, 62.0], [10502.0, 76.0], [10534.0, 37.0], [10790.0, 59.0], [10918.0, 37.0], [11078.0, 37.5], [11334.0, 44.0], [11366.0, 50.42857142857143], [11398.0, 73.0], [11462.0, 94.0], [11590.0, 35.0], [11686.0, 110.0], [11750.0, 41.0], [11910.0, 50.333333333333336], [11974.0, 37.0], [12006.0, 77.0], [12070.0, 41.0], [12134.0, 130.2], [12422.0, 49.0], [12518.0, 47.25], [12678.0, 118.0], [12742.0, 40.0], [12934.0, 58.0], [12966.0, 46.0], [12998.0, 63.0], [13030.0, 49.0], [13126.0, 42.0], [13190.0, 41.0], [13254.0, 46.0], [13286.0, 41.0], [13414.0, 45.5], [13542.0, 100.0], [13574.0, 50.0], [13638.0, 39.5], [13670.0, 47.0], [13830.0, 56.666666666666664], [13894.0, 61.0], [14022.0, 39.0], [14118.0, 41.5], [14342.0, 42.0], [14438.0, 84.0], [14470.0, 85.0], [14630.0, 38.5], [14662.0, 43.0], [14854.0, 39.0], [14950.0, 49.0], [14982.0, 38.0], [15366.0, 45.5], [15430.0, 38.0], [15526.0, 706.0], [15622.0, 695.0], [15654.0, 701.0], [15718.0, 2064.0], [15814.0, 136315.875], [15494.0, 213342.0], [8585.0, 78.0], [8553.0, 40.666666666666664], [8937.0, 47.5], [8873.0, 47.666666666666664], [9097.0, 45.0], [9609.0, 41.0], [9225.0, 48.0], [9673.0, 73.0], [9481.0, 43.333333333333336], [9737.0, 43.5], [10153.0, 103.0], [9993.0, 36.0], [10089.0, 41.5], [9865.0, 69.0], [10345.0, 37.0], [10281.0, 44.0], [10441.0, 76.5], [10697.0, 48.0], [10505.0, 57.0], [10601.0, 48.0], [10761.0, 37.0], [11049.0, 39.0], [11081.0, 34.0], [11113.0, 45.5], [11209.0, 44.714285714285715], [11241.0, 62.0], [11305.0, 37.0], [11369.0, 36.0], [11497.0, 37.0], [11561.0, 50.0], [11689.0, 99.33333333333333], [11625.0, 58.0], [11849.0, 46.0], [11817.0, 47.0], [11913.0, 35.0], [11945.0, 41.0], [12201.0, 52.0], [12233.0, 93.0], [12393.0, 42.8], [12329.0, 51.0], [12425.0, 43.0], [12585.0, 47.0], [12777.0, 44.0], [12649.0, 51.71428571428572], [12873.0, 79.5], [13097.0, 102.0], [13321.0, 101.0], [13513.0, 70.5], [13577.0, 45.5], [13673.0, 39.0], [13705.0, 83.0], [13737.0, 94.0], [13833.0, 42.5], [13897.0, 43.666666666666664], [13961.0, 1270.0], [14025.0, 44.0], [14281.0, 44.0], [14313.0, 50.0], [14377.0, 40.0], [14409.0, 39.0], [14473.0, 94.0], [14633.0, 41.5], [14825.0, 40.333333333333336], [14953.0, 40.25], [14985.0, 40.5], [15017.0, 38.333333333333336], [15145.0, 43.0], [15273.0, 40.5], [15657.0, 532.25], [15817.0, 74168.0], [15497.0, 211147.5], [8084.0, 2421.0], [8552.0, 84.0], [8904.0, 46.0], [8936.0, 40.0], [8872.0, 37.5], [8808.0, 70.0], [9064.0, 37.0], [9352.0, 48.0], [9224.0, 39.0], [9480.0, 41.0], [9672.0, 80.0], [9736.0, 51.0], [10152.0, 97.0], [9864.0, 76.0], [9928.0, 49.5], [10312.0, 39.5], [10248.0, 35.0], [10408.0, 43.0], [10376.0, 79.0], [10504.0, 47.6], [10728.0, 39.0], [10568.0, 45.0], [10600.0, 40.0], [10856.0, 83.0], [10920.0, 36.0], [11240.0, 72.0], [11048.0, 101.0], [11176.0, 51.0], [11208.0, 40.0], [11304.0, 37.333333333333336], [11336.0, 44.0], [11272.0, 92.0], [11528.0, 46.0], [11592.0, 42.0], [11624.0, 52.0], [11688.0, 80.5], [11784.0, 39.0], [11912.0, 45.0], [11976.0, 64.5], [12008.0, 69.0], [12232.0, 93.0], [12392.0, 47.25], [12776.0, 43.6], [12648.0, 36.0], [12872.0, 99.0], [13032.0, 41.0], [13096.0, 102.0], [13192.0, 47.0], [13384.0, 60.0], [13544.0, 105.0], [13576.0, 46.666666666666664], [13640.0, 43.0], [13704.0, 90.0], [13768.0, 36.0], [13896.0, 48.333333333333336], [14024.0, 49.333333333333336], [14088.0, 48.5], [14248.0, 103.33333333333333], [14280.0, 41.5], [14376.0, 44.0], [14472.0, 96.66666666666667], [14632.0, 36.5], [14792.0, 41.5], [14824.0, 38.0], [14856.0, 42.0], [14952.0, 41.666666666666664], [15080.0, 48.5], [15240.0, 48.0], [15368.0, 41.4], [15496.0, 43.0], [15592.0, 729.0], [15624.0, 703.0], [15656.0, 50.0], [15816.0, 1370.3333333333333], [8555.0, 41.0], [8875.0, 53.666666666666664], [8779.0, 81.0], [8811.0, 83.0], [9163.0, 45.0], [9291.0, 40.0], [9419.0, 46.0], [9643.0, 40.25], [9675.0, 49.5], [9515.0, 40.5], [9739.0, 38.0], [9803.0, 71.0], [9963.0, 45.0], [10155.0, 39.0], [10187.0, 88.0], [10059.0, 43.5], [10091.0, 38.0], [10411.0, 43.0], [10379.0, 84.0], [10539.0, 52.5], [10571.0, 45.333333333333336], [10763.0, 46.666666666666664], [10827.0, 38.5], [10923.0, 45.0], [11243.0, 80.0], [11435.0, 49.0], [11499.0, 34.0], [11531.0, 38.0], [11563.0, 39.0], [11595.0, 58.0], [11627.0, 44.5], [11819.0, 40.666666666666664], [12171.0, 42.0], [11915.0, 46.6], [11947.0, 42.5], [12011.0, 65.0], [12139.0, 38.0], [12331.0, 41.0], [12363.0, 40.0], [12427.0, 55.0], [12459.0, 94.0], [12747.0, 63.0], [12651.0, 41.0], [12811.0, 42.0], [13099.0, 100.66666666666667], [13131.0, 46.5], [13163.0, 37.0], [13355.0, 43.0], [13515.0, 40.2], [13547.0, 108.0], [13675.0, 46.0], [13707.0, 82.5], [13739.0, 98.0], [13835.0, 42.0], [13899.0, 43.0], [14027.0, 40.0], [14059.0, 50.0], [14411.0, 92.0], [14443.0, 93.0], [14539.0, 41.5], [14571.0, 37.0], [14795.0, 44.0], [14827.0, 44.0], [14859.0, 41.0], [14955.0, 41.6], [14987.0, 44.0], [15019.0, 43.5], [15051.0, 42.5], [15147.0, 749.8], [15211.0, 45.0], [15275.0, 54.0], [15307.0, 41.0], [15659.0, 40.5], [15819.0, 42450.5], [8085.0, 2417.0], [8426.0, 46.0], [8650.0, 45.0], [8554.0, 45.25], [8778.0, 60.5], [8874.0, 40.0], [9194.0, 62.0], [9290.0, 43.0], [9674.0, 79.5], [9642.0, 34.0], [9738.0, 43.0], [9834.0, 49.0], [10154.0, 40.0], [10058.0, 48.333333333333336], [9866.0, 67.6], [10282.0, 45.0], [10538.0, 39.333333333333336], [10570.0, 43.66666666666667], [10410.0, 47.0], [10442.0, 81.0], [10858.0, 83.0], [10986.0, 39.0], [11114.0, 39.0], [11210.0, 57.5], [11498.0, 160.4], [11370.0, 49.0], [11530.0, 35.0], [11562.0, 37.0], [11626.0, 39.666666666666664], [11818.0, 57.25], [11786.0, 40.0], [12170.0, 74.0], [12202.0, 42.333333333333336], [12234.0, 66.0], [11914.0, 44.66666666666667], [11946.0, 39.0], [11978.0, 158.33333333333334], [12010.0, 43.0], [12522.0, 43.0], [12330.0, 39.0], [12362.0, 43.0], [12778.0, 37.0], [12426.0, 40.0], [12650.0, 42.0], [12842.0, 76.0], [12874.0, 97.0], [13034.0, 47.0], [13098.0, 102.0], [13194.0, 39.0], [13354.0, 40.666666666666664], [13514.0, 57.0], [13578.0, 47.0], [13642.0, 38.0], [13834.0, 43.0], [13866.0, 39.0], [14218.0, 58.0], [14250.0, 104.0], [14282.0, 86.0], [14314.0, 66.0], [14538.0, 47.5], [14634.0, 39.5], [14666.0, 84.4], [14794.0, 40.0], [14826.0, 45.0], [14858.0, 41.0], [14954.0, 37.0], [14986.0, 39.0], [15018.0, 45.0], [15114.0, 45.0], [15146.0, 509.3333333333333], [15210.0, 38.0], [15274.0, 45.6], [15306.0, 38.0], [15370.0, 41.0], [15434.0, 40.0], [15658.0, 40.0], [15818.0, 1380.5], [15498.0, 218148.5], [8429.0, 40.0], [8557.0, 48.0], [8781.0, 74.0], [8877.0, 45.0], [8845.0, 43.0], [8717.0, 40.5], [9453.0, 40.0], [9261.0, 93.0], [9645.0, 41.0], [9549.0, 82.0], [9581.0, 41.5], [9805.0, 72.0], [9741.0, 43.0], [9933.0, 34.0], [10157.0, 39.0], [10061.0, 85.0], [9901.0, 36.5], [10509.0, 77.0], [10349.0, 75.33333333333333], [10829.0, 111.0], [10989.0, 34.0], [11149.0, 36.0], [11181.0, 37.0], [11213.0, 58.0], [11245.0, 70.0], [10893.0, 43.0], [11053.0, 100.0], [11373.0, 45.8], [11661.0, 45.0], [11341.0, 57.5], [11501.0, 39.0], [11565.0, 44.0], [11629.0, 39.0], [11693.0, 127.0], [11757.0, 51.0], [11917.0, 46.333333333333336], [11949.0, 40.0], [12013.0, 63.0], [12141.0, 113.99999999999999], [12269.0, 75.0], [12525.0, 70.5], [12461.0, 87.0], [12877.0, 83.5], [12941.0, 46.5], [13037.0, 44.666666666666664], [13069.0, 42.5], [13165.0, 42.0], [13357.0, 52.0], [13389.0, 42.0], [13517.0, 40.0], [13645.0, 61.0], [13709.0, 51.4], [13805.0, 53.0], [13901.0, 60.0], [14189.0, 41.0], [14221.0, 44.0], [14349.0, 43.0], [14381.0, 51.0], [14413.0, 38.0], [14509.0, 44.666666666666664], [14541.0, 45.0], [14701.0, 50.0], [14797.0, 37.0], [14893.0, 107.0], [14861.0, 42.5], [14925.0, 819.0], [14957.0, 43.0], [15021.0, 42.0], [15085.0, 44.0], [15117.0, 45.0], [15213.0, 57.0], [15277.0, 84.0], [15373.0, 38.0], [15437.0, 48.0], [15469.0, 741.5], [15501.0, 109853.5], [15661.0, 370.0], [15821.0, 73951.0], [8428.0, 35.0], [8556.0, 53.666666666666664], [8876.0, 36.0], [8780.0, 81.5], [8812.0, 78.66666666666667], [9164.0, 42.0], [9196.0, 51.0], [9228.0, 40.0], [9324.0, 60.0], [9420.0, 45.333333333333336], [9292.0, 45.0], [9644.0, 66.5], [9516.0, 42.333333333333336], [9580.0, 39.666666666666664], [9804.0, 39.0], [10124.0, 36.0], [9932.0, 46.0], [10156.0, 62.00000000000001], [10220.0, 43.0], [9996.0, 51.0], [10028.0, 38.5], [10284.0, 57.0], [10572.0, 46.75], [10828.0, 96.0], [10764.0, 45.0], [11180.0, 58.0], [11244.0, 78.0], [10892.0, 41.0], [10988.0, 43.5], [11116.0, 40.0], [11340.0, 40.0], [11500.0, 40.0], [11628.0, 40.0], [11788.0, 42.666666666666664], [12012.0, 82.5], [11820.0, 64.5], [12204.0, 38.0], [12236.0, 87.5], [12140.0, 52.5], [11916.0, 43.0], [11948.0, 43.0], [11980.0, 74.0], [12364.0, 36.0], [12332.0, 39.5], [12396.0, 54.0], [12492.0, 40.0], [12620.0, 44.0], [12652.0, 100.0], [12876.0, 42.5], [12940.0, 41.5], [13100.0, 95.66666666666667], [13164.0, 47.0], [13356.0, 52.666666666666664], [13420.0, 62.0], [13516.0, 40.5], [13580.0, 44.0], [13708.0, 46.5], [13740.0, 88.0], [13836.0, 41.333333333333336], [13868.0, 42.0], [13900.0, 91.0], [14508.0, 47.5], [14540.0, 40.5], [14572.0, 59.666666666666664], [14700.0, 42.5], [14796.0, 53.0], [14860.0, 40.0], [14956.0, 42.0], [15020.0, 39.5], [15052.0, 39.5], [15084.0, 41.0], [15148.0, 593.4], [15180.0, 39.0], [15212.0, 40.5], [15308.0, 40.5], [15436.0, 42.0], [15500.0, 38.0], [15628.0, 716.0], [15660.0, 38.0], [8591.0, 46.666666666666664], [8399.0, 40.0], [8559.0, 53.0], [8655.0, 38.0], [8911.0, 49.666666666666664], [8879.0, 47.0], [9199.0, 43.75], [9039.0, 54.0], [8783.0, 70.0], [9295.0, 40.0], [9263.0, 88.0], [9327.0, 43.333333333333336], [9679.0, 49.0], [9583.0, 38.5], [9743.0, 40.0], [10223.0, 41.5], [10319.0, 42.0], [10255.0, 48.0], [10287.0, 40.0], [10351.0, 61.0], [10607.0, 40.0], [10415.0, 99.0], [10863.0, 92.5], [11215.0, 55.0], [10895.0, 39.0], [10927.0, 37.0], [10991.0, 38.5], [11311.0, 50.0], [11343.0, 43.0], [11439.0, 43.333333333333336], [11503.0, 44.0], [11567.0, 68.5], [11695.0, 92.0], [11759.0, 58.666666666666664], [11823.0, 49.0], [11919.0, 208.0], [11951.0, 53.0], [12015.0, 53.0], [12111.0, 45.0], [12335.0, 39.5], [12751.0, 56.0], [12879.0, 43.0], [12943.0, 47.5], [12975.0, 55.5], [13039.0, 43.0], [13231.0, 45.0], [13263.0, 41.0], [13359.0, 44.0], [13487.0, 73.0], [13519.0, 59.0], [13551.0, 108.0], [13615.0, 54.5], [13647.0, 50.0], [14063.0, 51.0], [14159.0, 41.5], [14191.0, 38.0], [14223.0, 40.75], [14287.0, 41.0], [14319.0, 39.0], [14415.0, 59.2], [14511.0, 42.5], [14575.0, 69.0], [14735.0, 48.333333333333336], [14895.0, 113.0], [14991.0, 40.0], [15023.0, 49.0], [15087.0, 38.0], [15151.0, 745.0], [15343.0, 781.0], [15439.0, 41.0], [15471.0, 460.6], [15503.0, 109776.5], [15663.0, 688.75], [15823.0, 78927.0], [8398.0, 305.0], [8526.0, 39.0], [8558.0, 40.0], [8718.0, 49.0], [8910.0, 42.0], [8878.0, 52.0], [8846.0, 40.0], [9102.0, 61.4], [9038.0, 39.0], [9262.0, 41.0], [9454.0, 36.5], [9422.0, 35.0], [9390.0, 39.0], [9230.0, 40.5], [9326.0, 43.0], [9710.0, 92.0], [9678.0, 69.33333333333333], [9550.0, 89.0], [9582.0, 42.0], [10158.0, 75.33333333333333], [10222.0, 39.0], [10030.0, 44.5], [10702.0, 40.0], [10350.0, 77.0], [10478.0, 39.333333333333336], [10574.0, 38.0], [10606.0, 35.0], [10830.0, 95.0], [10766.0, 37.0], [11214.0, 92.5], [10894.0, 55.5], [10990.0, 42.0], [11086.0, 48.0], [11118.0, 36.0], [11310.0, 36.0], [11374.0, 47.5], [11438.0, 46.0], [11502.0, 43.0], [11758.0, 51.75], [11886.0, 92.0], [11918.0, 40.0], [12014.0, 74.0], [12110.0, 82.0], [12238.0, 109.0], [12270.0, 100.0], [12366.0, 43.0], [12462.0, 92.66666666666667], [12494.0, 39.5], [12654.0, 109.0], [12942.0, 43.0], [13166.0, 44.5], [13230.0, 46.0], [13358.0, 48.0], [13390.0, 46.666666666666664], [13454.0, 56.0], [13486.0, 38.0], [13614.0, 49.0], [13678.0, 46.0], [13710.0, 70.75], [13870.0, 47.0], [14222.0, 88.5], [14318.0, 60.0], [14382.0, 45.0], [14414.0, 67.0], [14510.0, 45.0], [14574.0, 62.0], [14606.0, 113.0], [14638.0, 54.666666666666664], [14766.0, 49.0], [14862.0, 39.0], [14894.0, 113.0], [15022.0, 43.333333333333336], [15086.0, 45.0], [15214.0, 38.0], [15278.0, 42.0], [15470.0, 740.5], [15502.0, 38.0], [15566.0, 40.0], [15662.0, 689.0], [15406.0, 1130.0], [8241.0, 1024.0], [8433.0, 46.8], [8593.0, 47.0], [8561.0, 39.0], [9105.0, 73.75], [9137.0, 69.0], [9169.0, 44.0], [9201.0, 39.0], [9073.0, 39.0], [9425.0, 43.0], [9649.0, 40.0], [9681.0, 69.0], [9809.0, 38.5], [9905.0, 39.0], [9745.0, 46.0], [10225.0, 42.0], [10065.0, 52.0], [10257.0, 42.0], [10353.0, 47.66666666666667], [10481.0, 40.333333333333336], [10641.0, 79.0], [10705.0, 39.0], [10577.0, 57.0], [10417.0, 82.0], [10833.0, 85.33333333333333], [10865.0, 95.5], [10897.0, 33.0], [10929.0, 41.8], [11249.0, 71.0], [11217.0, 54.5], [11665.0, 68.5], [11505.0, 36.0], [11601.0, 37.0], [11729.0, 38.0], [11761.0, 45.0], [11697.0, 105.0], [11857.0, 67.33333333333333], [11825.0, 44.5], [11889.0, 91.0], [12209.0, 40.0], [12241.0, 65.8], [12113.0, 56.5], [11953.0, 38.0], [12017.0, 40.666666666666664], [12401.0, 38.0], [12433.0, 39.0], [12465.0, 104.0], [12497.0, 62.0], [12561.0, 37.0], [12657.0, 75.0], [12881.0, 48.666666666666664], [12817.0, 79.0], [12913.0, 43.333333333333336], [12945.0, 44.0], [12977.0, 45.0], [13041.0, 43.0], [13169.0, 44.5], [13297.0, 110.0], [13393.0, 45.0], [13457.0, 40.0], [13521.0, 46.0], [13585.0, 39.0], [13777.0, 43.0], [13809.0, 55.0], [13937.0, 57.0], [14033.0, 37.5], [14225.0, 60.33333333333333], [14289.0, 54.5], [14321.0, 39.0], [14513.0, 45.5], [14577.0, 48.0], [14641.0, 38.0], [14737.0, 40.0], [14801.0, 49.0], [14929.0, 832.0], [14993.0, 38.0], [15089.0, 48.666666666666664], [15153.0, 736.6666666666666], [15377.0, 40.0], [15441.0, 38.0], [15473.0, 44.0], [15505.0, 144791.66666666666], [15537.0, 713.0], [15825.0, 19137.0], [8432.0, 43.0], [8240.0, 1045.0], [8560.0, 49.666666666666664], [8912.0, 37.0], [8880.0, 38.5], [9104.0, 41.0], [8976.0, 39.0], [9424.0, 39.0], [9392.0, 40.0], [9264.0, 53.0], [9328.0, 39.0], [9680.0, 57.0], [9744.0, 52.5], [9968.0, 44.333333333333336], [9808.0, 40.0], [10064.0, 57.5], [10224.0, 39.0], [10128.0, 60.0], [10288.0, 42.0], [10480.0, 37.0], [10416.0, 93.0], [10384.0, 36.0], [10256.0, 44.333333333333336], [10320.0, 41.0], [10640.0, 89.0], [10576.0, 39.5], [10352.0, 62.5], [10832.0, 37.0], [10864.0, 88.0], [10928.0, 38.0], [11248.0, 78.0], [11056.0, 57.75], [11312.0, 41.0], [11376.0, 47.0], [11696.0, 93.66666666666667], [11760.0, 68.0], [11504.0, 42.5], [11568.0, 39.0], [11824.0, 47.666666666666664], [11856.0, 136.0], [12272.0, 42.0], [11952.0, 44.0], [12016.0, 40.75], [12048.0, 97.0], [12560.0, 42.0], [12336.0, 52.0], [12624.0, 43.0], [12656.0, 78.0], [12752.0, 41.0], [12976.0, 55.5], [12880.0, 72.18181818181817], [12944.0, 46.0], [13040.0, 52.5], [13136.0, 42.333333333333336], [13360.0, 41.0], [13392.0, 44.0], [13456.0, 39.0], [13488.0, 58.0], [13616.0, 43.0], [13776.0, 43.5], [13808.0, 43.0], [14128.0, 42.0], [14160.0, 50.0], [14224.0, 69.4], [14288.0, 42.875], [14320.0, 42.0], [14416.0, 39.0], [14576.0, 55.0], [14640.0, 50.333333333333336], [14704.0, 41.0], [14736.0, 39.5], [14768.0, 42.0], [14800.0, 40.0], [14896.0, 124.0], [14928.0, 836.0], [14992.0, 50.0], [15088.0, 39.5], [15152.0, 745.0], [15184.0, 41.0], [15344.0, 1052.3333333333333], [15376.0, 43.0], [15408.0, 42.4], [15504.0, 105919.0], [15824.0, 3987.0], [15440.0, 1596.0], [8243.0, 47.5], [8307.0, 77.5], [8435.0, 52.0], [8595.0, 45.0], [8499.0, 39.666666666666664], [8755.0, 43.0], [8915.0, 39.0], [8947.0, 58.5], [8883.0, 51.0], [8787.0, 62.333333333333336], [9139.0, 80.5], [9427.0, 39.0], [9235.0, 45.5], [9363.0, 42.5], [9651.0, 48.0], [9523.0, 94.0], [9555.0, 87.0], [9587.0, 45.0], [9811.0, 41.0], [9843.0, 58.0], [9939.0, 41.0], [9747.0, 40.25], [10003.0, 41.0], [10067.0, 41.0], [10099.0, 37.0], [10419.0, 82.0], [10451.0, 85.0], [10707.0, 55.5], [10771.0, 50.0], [10835.0, 73.5], [11027.0, 75.5], [11219.0, 47.75], [11315.0, 51.0], [11411.0, 53.0], [11443.0, 43.0], [11635.0, 75.0], [11667.0, 47.166666666666664], [11859.0, 62.5], [11923.0, 86.0], [12051.0, 182.33333333333334], [12115.0, 43.333333333333336], [12243.0, 115.6], [12339.0, 42.0], [12371.0, 48.5], [12531.0, 37.0], [12563.0, 41.0], [12595.0, 49.0], [12627.0, 37.0], [12819.0, 73.5], [12883.0, 105.33333333333333], [13107.0, 83.5], [13235.0, 49.333333333333336], [13267.0, 38.0], [13523.0, 63.0], [13779.0, 42.0], [13875.0, 46.0], [13907.0, 44.333333333333336], [13971.0, 1257.0], [14035.0, 39.0], [14163.0, 43.666666666666664], [14227.0, 48.25], [14515.0, 40.42857142857143], [14579.0, 40.5], [14675.0, 106.0], [14771.0, 48.0], [14803.0, 51.5], [14867.0, 49.0], [14931.0, 823.0], [14995.0, 44.0], [15059.0, 39.0], [15091.0, 58.0], [15123.0, 48.0], [15219.0, 43.0], [15283.0, 36.0], [15411.0, 41.0], [15507.0, 38.0], [15667.0, 738.0], [15699.0, 42.0], [15731.0, 1031.25], [15475.0, 211789.55], [8434.0, 46.33333333333333], [8498.0, 39.0], [8562.0, 44.75], [9106.0, 63.0], [8914.0, 42.0], [9138.0, 65.0], [9202.0, 52.0], [9042.0, 59.0], [9074.0, 37.0], [8786.0, 59.0], [9266.0, 40.5], [9234.0, 68.0], [9458.0, 40.0], [9426.0, 69.0], [9650.0, 48.0], [9682.0, 55.0], [9490.0, 40.0], [9522.0, 89.0], [9554.0, 71.66666666666667], [9810.0, 44.125], [9746.0, 38.6], [9938.0, 40.5], [10194.0, 39.0], [10226.0, 42.0], [10354.0, 64.0], [10642.0, 78.8], [10290.0, 40.0], [10706.0, 57.0], [10578.0, 41.5], [10610.0, 32.0], [10418.0, 83.0], [10482.0, 57.0], [10930.0, 46.0], [11218.0, 42.75], [11250.0, 88.75], [11666.0, 55.333333333333336], [11314.0, 39.666666666666664], [11602.0, 45.0], [11634.0, 59.0], [11858.0, 62.333333333333336], [11794.0, 52.0], [11922.0, 67.0], [12114.0, 46.166666666666664], [12242.0, 40.0], [12402.0, 45.4], [12562.0, 43.0], [12594.0, 43.666666666666664], [12626.0, 47.0], [12658.0, 101.0], [12850.0, 77.0], [12914.0, 40.0], [12946.0, 49.0], [13010.0, 39.0], [13170.0, 40.0], [13202.0, 39.0], [13298.0, 99.0], [13458.0, 47.5], [13490.0, 44.0], [13522.0, 102.0], [13650.0, 40.0], [13682.0, 39.0], [13746.0, 86.57142857142858], [13778.0, 42.0], [13874.0, 47.0], [13970.0, 1259.6666666666667], [14098.0, 42.0], [14162.0, 41.0], [14226.0, 88.0], [14258.0, 123.0], [14290.0, 47.5], [14514.0, 43.75], [14546.0, 41.5], [14578.0, 56.0], [14738.0, 40.5], [14802.0, 43.0], [14866.0, 35.0], [14930.0, 826.0], [14994.0, 38.0], [15090.0, 41.0], [15186.0, 64.0], [15314.0, 46.0], [15730.0, 1352.3333333333335], [15826.0, 72506.4], [15474.0, 218329.75000000015], [8309.0, 51.5], [8437.0, 40.666666666666664], [8501.0, 44.0], [8693.0, 43.0], [8821.0, 87.0], [8757.0, 46.0], [8885.0, 42.25], [8917.0, 49.666666666666664], [9109.0, 73.5], [9173.0, 43.0], [9013.0, 50.16666666666667], [9077.0, 46.666666666666664], [9429.0, 38.0], [9301.0, 51.75], [9621.0, 38.0], [9653.0, 46.4], [9493.0, 41.0], [10133.0, 43.0], [9749.0, 48.8], [9781.0, 35.0], [10229.0, 35.0], [10069.0, 57.0], [10101.0, 46.0], [10357.0, 60.0], [10741.0, 45.0], [10613.0, 65.5], [10421.0, 81.5], [10485.0, 47.333333333333336], [10837.0, 63.666666666666664], [11221.0, 58.0], [10933.0, 45.5], [10997.0, 39.0], [11029.0, 102.5], [11093.0, 43.333333333333336], [11317.0, 39.666666666666664], [11381.0, 55.0], [11445.0, 80.0], [11637.0, 44.0], [11733.0, 43.0], [11861.0, 53.0], [11989.0, 41.5], [12053.0, 111.83333333333333], [12149.0, 62.0], [12437.0, 42.0], [12533.0, 43.0], [12629.0, 67.0], [12693.0, 40.0], [12725.0, 60.0], [12885.0, 92.0], [13013.0, 39.0], [13045.0, 37.0], [13077.0, 42.0], [13141.0, 40.0], [13301.0, 81.25], [13365.0, 58.0], [13525.0, 108.5], [13653.0, 38.5], [13749.0, 90.0], [13781.0, 49.666666666666664], [13877.0, 39.0], [13909.0, 53.0], [13941.0, 38.0], [14101.0, 37.666666666666664], [14229.0, 41.0], [14325.0, 42.25], [14517.0, 45.333333333333336], [14613.0, 42.0], [14645.0, 41.25], [14677.0, 100.0], [14805.0, 40.0], [14837.0, 45.0], [14965.0, 35.0], [15093.0, 41.5], [15221.0, 40.0], [15509.0, 45.8], [15541.0, 713.0], [15573.0, 47.0], [15605.0, 716.0], [15733.0, 726.0], [8244.0, 786.75], [8308.0, 84.0], [8404.0, 43.0], [8436.0, 46.0], [8692.0, 38.0], [8564.0, 40.5], [8916.0, 41.0], [8756.0, 40.0], [8884.0, 52.0], [8788.0, 60.0], [9108.0, 79.0], [9140.0, 76.0], [9204.0, 40.0], [9300.0, 36.5], [9652.0, 37.0], [9716.0, 103.0], [9524.0, 74.0], [9844.0, 63.0], [9812.0, 81.0], [9748.0, 44.5], [9780.0, 43.0], [10132.0, 42.0], [10004.0, 38.0], [10036.0, 38.0], [10068.0, 39.333333333333336], [9908.0, 35.0], [10260.0, 52.0], [10356.0, 60.0], [10484.0, 67.33333333333333], [10740.0, 38.0], [11156.0, 42.0], [10836.0, 52.5], [11220.0, 41.333333333333336], [10932.0, 38.0], [11028.0, 37.0], [11092.0, 47.0], [11316.0, 44.5], [11412.0, 36.0], [11444.0, 41.0], [11540.0, 57.0], [11668.0, 58.0], [12052.0, 99.83333333333333], [12724.0, 42.0], [12564.0, 43.0], [12788.0, 38.0], [12884.0, 98.0], [12948.0, 45.666666666666664], [12980.0, 61.0], [13076.0, 47.0], [13268.0, 40.0], [13300.0, 121.5], [13428.0, 41.666666666666664], [13524.0, 93.0], [13652.0, 53.666666666666664], [13780.0, 45.2], [13876.0, 37.0], [13908.0, 44.333333333333336], [13940.0, 41.0], [14100.0, 40.0], [14196.0, 49.5], [14228.0, 71.6], [14356.0, 41.0], [14516.0, 42.875], [14644.0, 53.5], [14676.0, 103.0], [14708.0, 45.0], [14996.0, 42.0], [15028.0, 43.5], [15092.0, 43.0], [15284.0, 43.0], [15316.0, 39.0], [15572.0, 40.666666666666664], [15636.0, 717.0], [15668.0, 1421.25], [15700.0, 46.0], [15732.0, 723.0], [8407.0, 40.333333333333336], [8439.0, 49.0], [8503.0, 40.0], [8695.0, 39.0], [8631.0, 39.5], [8311.0, 71.0], [8919.0, 52.5], [9207.0, 44.0], [9175.0, 41.0], [9111.0, 62.333333333333336], [9079.0, 43.666666666666664], [9335.0, 41.0], [9463.0, 44.0], [9239.0, 39.0], [9527.0, 80.0], [9591.0, 46.5], [9783.0, 39.0], [9943.0, 42.0], [9815.0, 46.0], [10039.0, 43.666666666666664], [10103.0, 44.4], [10295.0, 40.0], [10455.0, 99.0], [10487.0, 66.5], [10711.0, 37.0], [10551.0, 37.0], [10423.0, 93.5], [10775.0, 41.0], [11031.0, 78.0], [11255.0, 149.0], [11607.0, 48.2], [11671.0, 151.0], [11735.0, 40.5], [11863.0, 52.714285714285715], [11799.0, 39.0], [12183.0, 46.0], [12279.0, 43.0], [11927.0, 40.0], [12055.0, 84.33333333333333], [12087.0, 39.0], [12311.0, 39.0], [12439.0, 46.0], [12567.0, 43.5], [12599.0, 42.0], [12791.0, 44.0], [12823.0, 54.666666666666664], [13207.0, 48.0], [13239.0, 49.0], [13527.0, 38.0], [13623.0, 43.0], [13751.0, 97.0], [13783.0, 43.5], [13847.0, 64.0], [14039.0, 47.0], [14135.0, 41.0], [14167.0, 46.0], [14231.0, 91.0], [14327.0, 42.2], [14359.0, 38.0], [14391.0, 41.0], [14647.0, 92.0], [14903.0, 658.75], [14935.0, 842.0], [15031.0, 37.0], [15159.0, 757.0], [15255.0, 50.5], [15319.0, 590.5], [15447.0, 46.0], [15575.0, 44.0], [15671.0, 203403.16666666666], [8438.0, 38.666666666666664], [8406.0, 38.0], [8566.0, 43.0], [8758.0, 39.0], [8726.0, 45.0], [8918.0, 59.0], [8886.0, 36.0], [8854.0, 50.0], [8822.0, 82.0], [9142.0, 81.0], [9174.0, 45.4], [9206.0, 44.0], [9014.0, 37.0], [9046.0, 36.5], [9078.0, 41.0], [9462.0, 47.0], [9526.0, 72.0], [9654.0, 46.36363636363637], [9558.0, 36.0], [9590.0, 49.0], [10134.0, 49.5], [9750.0, 48.25], [10230.0, 42.5], [10006.0, 41.0], [10038.0, 66.0], [10358.0, 69.0], [10294.0, 54.0], [10710.0, 61.0], [10742.0, 35.0], [10486.0, 38.0], [10614.0, 95.0], [10806.0, 42.0], [10838.0, 100.5], [10934.0, 47.0], [11030.0, 98.33333333333333], [11222.0, 60.75], [11670.0, 47.0], [11510.0, 43.0], [11606.0, 44.0], [11638.0, 33.0], [11734.0, 52.833333333333336], [11830.0, 43.333333333333336], [11798.0, 207.0], [11862.0, 205.25], [11894.0, 66.5], [11926.0, 58.5], [12054.0, 83.33333333333333], [12214.0, 41.0], [12278.0, 38.0], [12310.0, 39.0], [12406.0, 46.5], [12566.0, 40.5], [12822.0, 40.0], [13078.0, 37.0], [13110.0, 38.5], [13206.0, 89.0], [13238.0, 49.0], [13302.0, 108.33333333333333], [13526.0, 37.0], [13654.0, 44.5], [13686.0, 37.0], [13750.0, 86.33333333333333], [13782.0, 40.16666666666667], [13846.0, 64.0], [13910.0, 40.0], [14070.0, 44.0], [14230.0, 63.0], [14326.0, 44.75], [14550.0, 42.0], [14358.0, 44.0], [14518.0, 50.0], [14614.0, 38.0], [14646.0, 41.333333333333336], [14678.0, 104.0], [14710.0, 38.0], [14806.0, 44.0], [14838.0, 52.0], [15094.0, 42.66666666666667], [15158.0, 36.0], [15222.0, 44.0], [15254.0, 51.0], [15318.0, 783.5], [15574.0, 38.0], [15606.0, 715.3333333333334], [15670.0, 172766.5555555556], [8505.0, 41.0], [8633.0, 36.0], [8665.0, 42.0], [9209.0, 46.0], [8985.0, 52.0], [9049.0, 38.0], [9433.0, 59.0], [9401.0, 43.0], [9689.0, 71.0], [9561.0, 41.0], [9945.0, 51.0], [9785.0, 40.5], [10105.0, 37.0], [9881.0, 80.66666666666667], [10297.0, 44.0], [10361.0, 69.0], [10681.0, 39.0], [10617.0, 74.0], [10777.0, 43.0], [10905.0, 53.0], [11129.0, 43.0], [11321.0, 57.0], [11353.0, 38.0], [11417.0, 47.0], [11449.0, 45.0], [11673.0, 90.0], [11609.0, 61.333333333333336], [12185.0, 42.75000000000001], [11865.0, 83.69999999999999], [12057.0, 77.5], [12121.0, 40.0], [12217.0, 41.0], [12249.0, 89.0], [12313.0, 38.5], [12345.0, 40.333333333333336], [12729.0, 45.0], [12601.0, 49.0], [12633.0, 40.0], [13369.0, 41.5], [13497.0, 41.0], [13529.0, 109.0], [13561.0, 46.0], [13689.0, 44.0], [13785.0, 43.25], [13881.0, 38.75], [14073.0, 40.0], [14137.0, 40.5], [14361.0, 41.0], [14521.0, 41.0], [14745.0, 40.0], [14777.0, 42.333333333333336], [14809.0, 40.0], [15001.0, 45.0], [15065.0, 37.0], [15161.0, 40.5], [15193.0, 42.0], [15257.0, 39.0], [15321.0, 1056.3333333333333], [15417.0, 39.0], [15481.0, 280.0], [15577.0, 37.5], [15609.0, 720.25], [15705.0, 548.5], [15769.0, 1428.6], [15673.0, 181754.66666666666], [8440.0, 37.0], [8408.0, 35.0], [8696.0, 46.857142857142854], [8632.0, 106.0], [8536.0, 46.0], [8568.0, 45.0], [8312.0, 55.0], [9208.0, 47.0], [9080.0, 60.5], [9528.0, 90.0], [9592.0, 42.0], [9944.0, 39.6], [9816.0, 48.0], [10264.0, 37.0], [10424.0, 84.0], [10296.0, 45.0], [10360.0, 49.666666666666664], [10680.0, 35.0], [10616.0, 91.5], [10776.0, 47.2], [10808.0, 47.5], [10840.0, 96.5], [11032.0, 100.6], [11096.0, 38.5], [11288.0, 35.0], [11608.0, 51.5], [11672.0, 108.0], [11864.0, 58.0], [12024.0, 75.0], [12184.0, 54.8], [12280.0, 41.0], [12344.0, 54.0], [12312.0, 48.666666666666664], [12792.0, 38.0], [12440.0, 61.0], [12504.0, 48.0], [12568.0, 42.666666666666664], [12600.0, 50.0], [12632.0, 39.0], [12824.0, 40.0], [12984.0, 53.0], [13080.0, 103.0], [13208.0, 42.5], [13304.0, 61.5], [13336.0, 47.0], [13528.0, 90.66666666666667], [13752.0, 95.66666666666667], [13784.0, 41.333333333333336], [13880.0, 42.25], [14040.0, 40.0], [14136.0, 47.0], [14328.0, 54.5], [14360.0, 42.0], [14648.0, 40.0], [14744.0, 40.0], [14904.0, 218.0], [14968.0, 40.0], [15128.0, 40.0], [15160.0, 744.0], [15256.0, 38.0], [15320.0, 133.375], [15448.0, 37.5], [15704.0, 1400.5], [15768.0, 1904.6666666666667], [15672.0, 220364.75], [8315.0, 51.5], [8411.0, 36.0], [8507.0, 45.2], [8763.0, 39.5], [8891.0, 48.0], [8731.0, 40.0], [8987.0, 40.83333333333333], [9051.0, 39.0], [9243.0, 51.0], [9371.0, 43.0], [9339.0, 42.5], [9691.0, 73.0], [9531.0, 44.25], [10171.0, 86.0], [9947.0, 36.0], [10203.0, 40.0], [10011.0, 38.0], [10075.0, 45.0], [10107.0, 44.0], [9883.0, 83.5], [9915.0, 46.0], [10427.0, 69.0], [10395.0, 43.0], [10459.0, 41.0], [10747.0, 41.5], [10715.0, 45.5], [10651.0, 95.0], [10619.0, 85.0], [10811.0, 53.0], [11035.0, 75.0], [11131.0, 32.0], [11355.0, 46.0], [11483.0, 94.0], [11739.0, 61.4], [11643.0, 67.0], [11995.0, 46.2], [11803.0, 40.0], [11867.0, 94.25], [11931.0, 40.0], [12091.0, 64.0], [12123.0, 79.0], [12315.0, 38.0], [12379.0, 53.0], [12507.0, 44.666666666666664], [12603.0, 43.0], [12731.0, 36.5], [12667.0, 107.5], [12827.0, 51.0], [12859.0, 42.0], [12891.0, 41.0], [12923.0, 40.0], [12955.0, 49.0], [13083.0, 46.0], [13243.0, 44.0], [13403.0, 42.75], [13499.0, 41.0], [13627.0, 41.0], [13787.0, 45.0], [13915.0, 39.0], [13947.0, 116.5], [14107.0, 60.0], [14171.0, 42.0], [14299.0, 46.0], [14331.0, 42.5], [14459.0, 101.5], [14555.0, 39.0], [14587.0, 54.0], [14939.0, 41.0], [15195.0, 41.5], [15323.0, 278.66666666666663], [15451.0, 46.0], [15579.0, 51.0], [15707.0, 1392.0], [15739.0, 1533.0], [15771.0, 717.0], [15803.0, 1377.0], [15483.0, 212403.8], [15675.0, 218952.92660550447], [8410.0, 37.0], [8474.0, 76.0], [8698.0, 44.0], [8506.0, 39.0], [8314.0, 69.0], [9210.0, 40.0], [8986.0, 50.333333333333336], [9050.0, 47.0], [9242.0, 39.5], [9434.0, 39.0], [9690.0, 73.0], [9626.0, 45.0], [9530.0, 54.0], [9978.0, 42.0], [9754.0, 40.0], [9946.0, 38.5], [9882.0, 91.0], [9786.0, 38.5], [10138.0, 56.5], [10106.0, 43.8], [10266.0, 40.75], [10298.0, 40.5], [10714.0, 38.0], [10618.0, 97.0], [10810.0, 40.0], [11418.0, 40.5], [11450.0, 38.0], [11482.0, 84.0], [11674.0, 424.0], [11738.0, 42.5], [11866.0, 38.333333333333336], [11994.0, 38.0], [11898.0, 103.0], [12058.0, 84.25], [12186.0, 43.0], [12250.0, 82.0], [12122.0, 70.0], [12698.0, 38.0], [12346.0, 40.0], [12730.0, 86.0], [12762.0, 51.0], [12442.0, 114.0], [12506.0, 43.0], [12538.0, 48.0], [12602.0, 41.0], [12666.0, 102.0], [12826.0, 62.0], [12954.0, 45.0], [13018.0, 41.0], [13050.0, 54.0], [13082.0, 111.5], [13210.0, 41.0], [13274.0, 43.0], [13306.0, 69.0], [13338.0, 78.5], [13370.0, 50.0], [13402.0, 37.5], [13466.0, 39.0], [13498.0, 55.0], [13562.0, 36.0], [13626.0, 41.0], [13786.0, 46.0], [13914.0, 38.0], [13946.0, 106.33333333333333], [14106.0, 46.0], [14138.0, 41.0], [14170.0, 55.0], [14362.0, 44.0], [14586.0, 57.0], [14618.0, 38.0], [14746.0, 43.0], [14778.0, 35.0], [14874.0, 56.75], [15034.0, 40.0], [15066.0, 41.0], [15130.0, 39.0], [15162.0, 40.0], [15194.0, 42.0], [15258.0, 49.0], [15322.0, 406.5], [15386.0, 53.0], [15514.0, 42.0], [15578.0, 46.0], [15610.0, 716.6666666666666], [15706.0, 1408.5], [15802.0, 2090.0], [15674.0, 221228.0], [8413.0, 42.0], [8317.0, 38.0], [8829.0, 40.0], [8989.0, 39.0], [9021.0, 39.0], [9085.0, 66.0], [9309.0, 46.0], [9245.0, 40.125], [9533.0, 69.5], [9757.0, 46.0], [10013.0, 46.0], [10077.0, 41.0], [10109.0, 52.0], [9885.0, 93.0], [10333.0, 52.5], [10301.0, 42.0], [10717.0, 46.0], [10557.0, 38.8], [10589.0, 46.0], [10493.0, 38.5], [11165.0, 36.0], [10941.0, 48.5], [10973.0, 50.5], [11037.0, 88.0], [11069.0, 42.0], [11101.0, 41.0], [11293.0, 37.0], [11421.0, 52.0], [11677.0, 113.0], [11741.0, 44.0], [11805.0, 155.66666666666666], [12157.0, 56.5], [12189.0, 46.8], [12285.0, 48.0], [12381.0, 45.0], [12317.0, 56.0], [12413.0, 38.0], [12445.0, 41.2], [12509.0, 41.2], [12541.0, 41.0], [12733.0, 43.166666666666664], [12765.0, 40.5], [13021.0, 39.5], [13085.0, 102.0], [13117.0, 45.8], [13149.0, 45.0], [13245.0, 39.0], [13277.0, 48.0], [13405.0, 83.0], [13565.0, 41.0], [13661.0, 58.0], [13853.0, 54.0], [13949.0, 92.0], [14109.0, 42.5], [14205.0, 41.0], [14333.0, 56.0], [14397.0, 43.5], [14461.0, 101.0], [14589.0, 56.75], [14749.0, 42.666666666666664], [14877.0, 35.0], [14941.0, 40.0], [15005.0, 51.666666666666664], [15069.0, 41.0], [15197.0, 45.0], [15325.0, 755.0], [15357.0, 780.0], [15389.0, 44.0], [15421.0, 40.0], [15453.0, 740.0], [15517.0, 51.0], [15581.0, 45.5], [15709.0, 1411.0], [15741.0, 1536.0], [15805.0, 125701.38790035587], [8174.0, 82.0], [8412.0, 99.8], [8508.0, 45.0], [8316.0, 42.0], [8764.0, 41.0], [8956.0, 37.0], [8732.0, 56.0], [9212.0, 36.0], [8988.0, 45.25], [9084.0, 50.0], [9244.0, 42.5], [9436.0, 47.0], [9340.0, 45.25], [9724.0, 39.0], [9500.0, 38.0], [9532.0, 60.333333333333336], [9756.0, 40.0], [10140.0, 50.666666666666664], [10236.0, 38.0], [10012.0, 42.0], [10044.0, 44.0], [10076.0, 44.0], [10428.0, 75.33333333333333], [10684.0, 43.0], [10812.0, 38.0], [11164.0, 41.0], [11196.0, 62.0], [10908.0, 45.0], [11100.0, 34.0], [11132.0, 39.0], [11676.0, 444.5], [11740.0, 93.5], [11868.0, 218.66666666666666], [11804.0, 79.0], [12124.0, 41.8], [12188.0, 44.0], [12220.0, 46.0], [12284.0, 46.0], [12028.0, 85.0], [12380.0, 41.5], [12412.0, 46.0], [12732.0, 40.0], [12796.0, 37.0], [12444.0, 91.66666666666667], [12508.0, 39.333333333333336], [12828.0, 56.0], [13052.0, 41.5], [13084.0, 104.0], [13116.0, 46.0], [13244.0, 38.0], [13404.0, 40.333333333333336], [13468.0, 48.0], [13820.0, 43.0], [13916.0, 47.0], [13948.0, 101.5], [14108.0, 39.5], [14204.0, 42.0], [14300.0, 40.0], [14332.0, 48.0], [14396.0, 41.0], [14588.0, 48.0], [14652.0, 44.0], [14748.0, 42.0], [14908.0, 824.0], [14940.0, 852.0], [14972.0, 41.0], [15196.0, 44.0], [15324.0, 768.0], [15388.0, 39.0], [15452.0, 41.666666666666664], [15516.0, 42.0], [15580.0, 39.25], [15612.0, 699.0], [15708.0, 1410.0], [15772.0, 1363.0], [15804.0, 2084.0], [15484.0, 208029.0], [8383.0, 290.0], [8767.0, 38.0], [8831.0, 35.0], [9087.0, 43.0], [9247.0, 39.5], [9471.0, 35.0], [9695.0, 79.0], [9663.0, 43.0], [9535.0, 74.0], [10239.0, 39.0], [10047.0, 44.0], [10079.0, 39.5], [10111.0, 47.5], [10751.0, 50.0], [10335.0, 45.0], [10495.0, 39.0], [10719.0, 42.5], [10527.0, 39.0], [10559.0, 49.0], [10591.0, 42.857142857142854], [10623.0, 53.0], [11199.0, 46.0], [10943.0, 39.666666666666664], [11263.0, 77.0], [10911.0, 42.333333333333336], [10975.0, 49.0], [11039.0, 78.4], [11135.0, 36.0], [11295.0, 38.0], [11455.0, 94.0], [11583.0, 40.0], [11711.0, 47.0], [11903.0, 111.0], [11807.0, 40.0], [12287.0, 41.0], [11935.0, 62.0], [12063.0, 108.0], [12095.0, 77.0], [12127.0, 43.5], [12351.0, 44.666666666666664], [12447.0, 42.25], [12511.0, 43.0], [12607.0, 39.0], [12735.0, 42.0], [12767.0, 53.0], [12959.0, 40.0], [12991.0, 50.333333333333336], [13087.0, 94.0], [13151.0, 47.5], [13215.0, 50.0], [13247.0, 42.0], [13567.0, 45.0], [13695.0, 51.0], [13951.0, 1335.0], [14047.0, 48.0], [14399.0, 47.0], [14463.0, 92.5], [14655.0, 61.0], [14751.0, 44.0], [14815.0, 41.5], [14847.0, 47.0], [15135.0, 41.0], [15263.0, 39.85714285714286], [15359.0, 46.0], [15455.0, 738.0], [15487.0, 103239.5], [15519.0, 387.75], [15583.0, 39.0], [15615.0, 1400.0], [15775.0, 716.0], [15807.0, 122876.41666666667], [8638.0, 45.0], [8382.0, 286.0], [8318.0, 44.333333333333336], [8702.0, 53.0], [8510.0, 35.0], [8766.0, 38.25], [8862.0, 46.0], [9214.0, 43.0], [9086.0, 41.0], [9246.0, 54.0], [9438.0, 55.0], [9694.0, 80.0], [9662.0, 37.75], [9534.0, 66.25], [9566.0, 105.0], [9854.0, 63.5], [10238.0, 44.0], [9918.0, 41.0], [9950.0, 44.0], [10014.0, 49.0], [10046.0, 38.0], [10686.0, 41.0], [10302.0, 38.0], [10334.0, 40.5], [10654.0, 92.0], [10750.0, 48.0], [10558.0, 34.0], [10590.0, 45.8], [10622.0, 74.0], [10814.0, 46.666666666666664], [10974.0, 44.0], [11198.0, 37.0], [10910.0, 54.0], [10942.0, 44.5], [11038.0, 78.0], [11134.0, 56.0], [11294.0, 36.0], [11454.0, 40.0], [11614.0, 43.0], [12190.0, 52.0], [11806.0, 55.5], [12158.0, 54.0], [12254.0, 93.0], [12286.0, 44.25], [12350.0, 41.0], [12446.0, 57.0], [12510.0, 38.4], [12574.0, 48.0], [12734.0, 42.333333333333336], [12766.0, 83.0], [12862.0, 42.0], [12990.0, 47.0], [13022.0, 50.0], [13086.0, 87.0], [13118.0, 42.5], [13150.0, 47.0], [13374.0, 43.5], [13470.0, 44.0], [13566.0, 47.0], [13694.0, 40.5], [13918.0, 40.0], [14014.0, 42.0], [14078.0, 35.0], [14110.0, 58.5], [14334.0, 35.0], [14366.0, 42.0], [14462.0, 94.0], [14622.0, 65.66666666666667], [14686.0, 43.0], [14814.0, 47.0], [14974.0, 45.0], [15006.0, 42.5], [15262.0, 38.25], [15358.0, 415.5], [15230.0, 1142.0], [15518.0, 39.5], [15582.0, 42.0], [15614.0, 711.3333333333334], [15710.0, 1388.0], [15806.0, 116568.26315789472], [1.0, 114637.0]], "isOverall": false, "label": "getProfile", "isController": false}, {"data": [[3157.241711754047, 27585.458411257037]], "isOverall": false, "label": "getProfile-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 15826.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.63906728E12, "maxY": 3173780.316666667, "series": [{"data": [[1.6390674E12, 66769.25], [1.63906752E12, 3173780.316666667], [1.63906734E12, 13528.083333333334], [1.63906746E12, 2649465.7666666666], [1.63906728E12, 52101.0], [1.63906776E12, 123.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6390674E12, 52533.65], [1.63906752E12, 268380.45], [1.63906734E12, 10723.05], [1.63906746E12, 341126.5], [1.63906728E12, 39934.7], [1.63906776E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63906776E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 48.14732933929649, "minX": 1.63906728E12, "maxY": 225810.66666666666, "series": [{"data": [[1.6390674E12, 153504.71024280513], [1.63906752E12, 48.14732933929649], [1.63906734E12, 109518.52403467297], [1.63906746E12, 41148.706688134494], [1.63906728E12, 114.19276343630956], [1.63906776E12, 225810.66666666666]], "isOverall": false, "label": "getProfile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63906776E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63906728E12, "maxY": 153493.66296832287, "series": [{"data": [[1.6390674E12, 153493.66296832287], [1.63906752E12, 40.64384862036956], [1.63906734E12, 109489.59968479117], [1.63906746E12, 41136.795714639215], [1.63906728E12, 114.18831993228925], [1.63906776E12, 0.0]], "isOverall": false, "label": "getProfile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63906776E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 16.333333333333332, "minX": 1.63906728E12, "maxY": 77.4972419227738, "series": [{"data": [[1.6390674E12, 50.07621804148567], [1.63906752E12, 28.520715551430502], [1.63906734E12, 77.4972419227738], [1.63906746E12, 27.84300222937826], [1.63906728E12, 37.96656792213286], [1.63906776E12, 16.333333333333332]], "isOverall": false, "label": "getProfile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63906776E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.7976931348623157E308, "minX": 1.7976931348623157E308, "maxY": 4.9E-324, "series": [{"data": [], "isOverall": false, "label": "Max", "isController": false}, {"data": [], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [], "isOverall": false, "label": "Min", "isController": false}, {"data": [], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.9E-324, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 19.0, "minX": 1.0, "maxY": 221507.0, "series": [{"data": [[2.0, 1534.5], [3.0, 1396.0], [5.0, 1386.5], [6.0, 2066.5], [7.0, 2169.5], [9.0, 129831.0], [10.0, 713.5], [12.0, 1357.5], [13.0, 76530.0], [15.0, 1388.0], [16.0, 695.5], [17.0, 750.0], [20.0, 50752.5], [21.0, 128675.0], [24.0, 99069.0], [25.0, 52288.5], [27.0, 106286.0], [28.0, 101122.5], [31.0, 110187.5], [32.0, 117939.5], [35.0, 111089.0], [37.0, 121448.5], [36.0, 117908.5], [38.0, 115428.5], [41.0, 128691.0], [40.0, 119932.5], [43.0, 67871.5], [42.0, 61539.5], [45.0, 160423.0], [44.0, 136966.0], [47.0, 111899.0], [46.0, 160720.0], [49.0, 104897.0], [57.0, 136317.0], [61.0, 51294.5], [62.0, 119445.5], [63.0, 132393.0], [66.0, 133729.5], [64.0, 116817.0], [71.0, 44.0], [70.0, 113988.0], [68.0, 109856.5], [78.0, 147656.5], [79.0, 144623.0], [76.0, 126827.5], [77.0, 118934.0], [83.0, 138104.5], [81.0, 140874.0], [80.0, 124681.0], [86.0, 145447.0], [87.0, 149407.0], [85.0, 142748.0], [89.0, 159144.0], [90.0, 150489.0], [88.0, 158018.5], [91.0, 158730.0], [92.0, 175256.0], [113.0, 43.0], [122.0, 146188.5], [135.0, 162206.5], [134.0, 168420.5], [133.0, 170313.0], [136.0, 173112.5], [139.0, 158950.5], [141.0, 178440.0], [140.0, 176546.5], [137.0, 165469.0], [150.0, 164719.5], [170.0, 42.0], [171.0, 200302.0], [169.0, 151765.0], [181.0, 194903.0], [179.0, 168702.5], [182.0, 190248.5], [180.0, 162225.0], [176.0, 175965.0], [177.0, 160923.0], [187.0, 179229.0], [192.0, 46.0], [212.0, 157607.0], [227.0, 45.0], [228.0, 202461.0], [224.0, 206275.0], [226.0, 199187.0], [225.0, 162287.0], [252.0, 207000.5], [259.0, 204936.0], [256.0, 171836.0], [287.0, 45.0], [273.0, 203724.5], [272.0, 186340.0], [299.0, 44.0], [305.0, 44.0], [318.0, 210072.0], [314.0, 199339.0], [315.0, 207365.0], [326.0, 221507.0], [350.0, 45.0], [356.0, 44.0], [361.0, 208538.0], [374.0, 44.0], [383.0, 220657.0], [373.0, 163820.0], [391.0, 45.0], [411.0, 43.0], [405.0, 47.0], [444.0, 43.0], [466.0, 48.0], [514.0, 218105.0], [657.0, 21.0], [660.0, 22.0], [656.0, 22.0], [667.0, 22.0], [659.0, 21.0], [642.0, 21.0], [644.0, 21.0], [661.0, 21.0], [652.0, 22.0], [671.0, 20.0], [680.0, 22.0], [693.0, 20.0], [683.0, 22.0], [673.0, 21.0], [674.0, 21.0], [695.0, 21.0], [688.0, 21.0], [694.0, 22.0], [713.0, 19.0], [716.0, 20.0], [721.0, 21.0], [745.0, 47.0], [871.0, 52.0], [872.0, 52.0], [919.0, 51.0], [923.0, 51.0], [903.0, 52.0], [918.0, 51.0], [910.0, 52.0], [914.0, 52.0], [904.0, 51.0], [915.0, 52.0], [933.0, 51.0], [973.0, 52.0], [1022.0, 44.0], [1086.0, 48.0], [1276.0, 47.0], [1255.0, 47.0], [1247.0, 47.0], [1229.0, 46.0], [1270.0, 46.0], [1287.0, 46.0], [1295.0, 48.0], [1333.0, 47.0], [1300.0, 46.0], [1282.0, 47.0], [1281.0, 46.0], [1735.0, 43.0], [1871.0, 41.0], [2074.0, 41.0], [2270.0, 40.0], [2351.0, 39.0], [2311.0, 39.0], [2313.0, 39.0], [2363.0, 39.0], [2984.0, 38.0], [3212.0, 38.0], [3504.0, 37.0], [3703.0, 37.0], [3872.0, 36.0], [1.0, 19137.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3872.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 221507.0, "series": [{"data": [[2.0, 1534.5], [3.0, 1396.0], [5.0, 1386.5], [6.0, 2066.5], [7.0, 2169.5], [9.0, 129831.0], [10.0, 713.5], [12.0, 1357.5], [13.0, 73530.0], [15.0, 1388.0], [16.0, 695.5], [17.0, 750.0], [20.0, 50752.5], [21.0, 128675.0], [24.0, 99069.0], [25.0, 52288.5], [27.0, 106286.0], [28.0, 101122.5], [31.0, 110187.5], [32.0, 117939.5], [35.0, 111089.0], [37.0, 121448.5], [36.0, 117908.5], [38.0, 115428.5], [41.0, 128691.0], [40.0, 119932.5], [43.0, 67871.5], [42.0, 61539.5], [45.0, 160423.0], [44.0, 136966.0], [47.0, 111899.0], [46.0, 160720.0], [49.0, 104897.0], [57.0, 136317.0], [61.0, 51294.5], [62.0, 119445.5], [63.0, 132393.0], [66.0, 133729.5], [64.0, 116817.0], [71.0, 44.0], [70.0, 113988.0], [68.0, 109856.5], [78.0, 147656.5], [79.0, 144623.0], [76.0, 126827.5], [77.0, 118934.0], [83.0, 138104.5], [81.0, 140874.0], [80.0, 124681.0], [86.0, 145447.0], [87.0, 149407.0], [85.0, 142748.0], [89.0, 159144.0], [90.0, 150489.0], [88.0, 158018.5], [91.0, 158730.0], [92.0, 175256.0], [113.0, 43.0], [122.0, 146188.5], [135.0, 162206.5], [134.0, 168420.5], [133.0, 170313.0], [136.0, 173112.5], [139.0, 158950.5], [141.0, 178440.0], [140.0, 176546.5], [137.0, 165469.0], [150.0, 164719.5], [170.0, 42.0], [171.0, 200302.0], [169.0, 151765.0], [181.0, 194903.0], [179.0, 168702.5], [182.0, 190248.5], [180.0, 162225.0], [176.0, 175965.0], [177.0, 160923.0], [187.0, 179229.0], [192.0, 46.0], [212.0, 157607.0], [227.0, 45.0], [228.0, 202461.0], [224.0, 206275.0], [226.0, 199187.0], [225.0, 162287.0], [252.0, 207000.5], [259.0, 204839.0], [256.0, 171836.0], [287.0, 45.0], [273.0, 203724.5], [272.0, 186340.0], [299.0, 44.0], [305.0, 44.0], [318.0, 210072.0], [314.0, 199339.0], [315.0, 207365.0], [326.0, 221507.0], [350.0, 45.0], [356.0, 44.0], [361.0, 208538.0], [374.0, 44.0], [383.0, 220657.0], [373.0, 163820.0], [391.0, 45.0], [411.0, 43.0], [405.0, 47.0], [444.0, 43.0], [466.0, 48.0], [514.0, 218054.0], [657.0, 0.0], [660.0, 0.0], [656.0, 0.0], [667.0, 0.0], [659.0, 0.0], [642.0, 0.0], [644.0, 0.0], [661.0, 0.0], [652.0, 0.0], [671.0, 0.0], [680.0, 0.0], [693.0, 0.0], [683.0, 0.0], [673.0, 0.0], [674.0, 0.0], [695.0, 0.0], [688.0, 0.0], [694.0, 0.0], [713.0, 0.0], [716.0, 0.0], [721.0, 0.0], [745.0, 0.0], [871.0, 52.0], [872.0, 52.0], [919.0, 51.0], [923.0, 51.0], [903.0, 52.0], [918.0, 51.0], [910.0, 52.0], [914.0, 52.0], [904.0, 51.0], [915.0, 52.0], [933.0, 51.0], [973.0, 52.0], [1022.0, 44.0], [1086.0, 48.0], [1276.0, 47.0], [1255.0, 47.0], [1247.0, 47.0], [1229.0, 46.0], [1270.0, 46.0], [1287.0, 46.0], [1295.0, 48.0], [1333.0, 47.0], [1300.0, 46.0], [1282.0, 47.0], [1281.0, 46.0], [1735.0, 43.0], [1871.0, 41.0], [2074.0, 41.0], [2270.0, 40.0], [2351.0, 39.0], [2311.0, 39.0], [2313.0, 39.0], [2363.0, 39.0], [2984.0, 38.0], [3212.0, 38.0], [3504.0, 37.0], [3703.0, 36.0], [3872.0, 36.0], [1.0, 1363.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3872.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.63906722E12, "maxY": 788.0833333333334, "series": [{"data": [[1.6390674E12, 0.03333333333333333], [1.63906722E12, 134.58333333333334], [1.63906752E12, 788.0833333333334], [1.63906734E12, 0.7], [1.63906746E12, 535.2666666666667], [1.63906728E12, 207.85]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63906752E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63906728E12, "maxY": 533.2833333333333, "series": [{"data": [[1.6390674E12, 35.81666666666667], [1.63906734E12, 0.16666666666666666], [1.63906746E12, 117.56666666666666], [1.63906728E12, 1.1166666666666667]], "isOverall": false, "label": "520", "isController": false}, {"data": [[1.6390674E12, 0.016666666666666666], [1.63906734E12, 0.36666666666666664]], "isOverall": false, "label": "521", "isController": false}, {"data": [[1.63906734E12, 0.3]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.6390674E12, 67.78333333333333], [1.63906734E12, 20.05], [1.63906746E12, 21.983333333333334]], "isOverall": false, "label": "524", "isController": false}, {"data": [[1.63906752E12, 529.35], [1.63906746E12, 533.2833333333333]], "isOverall": false, "label": "403", "isController": false}, {"data": [[1.63906734E12, 0.26666666666666666], [1.63906728E12, 77.65]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.6390674E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.63906752E12, 260.71666666666664], [1.63906776E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63906776E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.63906728E12, "maxY": 790.0666666666667, "series": [{"data": [[1.6390674E12, 103.65], [1.63906752E12, 790.0666666666667], [1.63906734E12, 21.15], [1.63906746E12, 672.8333333333334], [1.63906728E12, 78.76666666666667], [1.63906776E12, 0.05]], "isOverall": false, "label": "getProfile-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63906776E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.63906728E12, "maxY": 790.0666666666667, "series": [{"data": [], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6390674E12, 103.65], [1.63906752E12, 790.0666666666667], [1.63906734E12, 21.15], [1.63906746E12, 672.8333333333334], [1.63906728E12, 78.76666666666667], [1.63906776E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63906776E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

